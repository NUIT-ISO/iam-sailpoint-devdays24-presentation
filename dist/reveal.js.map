{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\r\n * Extend object a with the properties of object b.\r\n * If there's a conflict, object b takes precedence.\r\n *\r\n * @param {object} a\r\n * @param {object} b\r\n */\r\nexport const extend = ( a, b ) => {\r\n\r\n\tfor( let i in b ) {\r\n\t\ta[ i ] = b[ i ];\r\n\t}\r\n\r\n\treturn a;\r\n\r\n}\r\n\r\n/**\r\n * querySelectorAll but returns an Array.\r\n */\r\nexport const queryAll = ( el, selector ) => {\r\n\r\n\treturn Array.from( el.querySelectorAll( selector ) );\r\n\r\n}\r\n\r\n/**\r\n * classList.toggle() with cross browser support\r\n */\r\nexport const toggleClass = ( el, className, value ) => {\r\n\tif( value ) {\r\n\t\tel.classList.add( className );\r\n\t}\r\n\telse {\r\n\t\tel.classList.remove( className );\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility for deserializing a value.\r\n *\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nexport const deserialize = ( value ) => {\r\n\r\n\tif( typeof value === 'string' ) {\r\n\t\tif( value === 'null' ) return null;\r\n\t\telse if( value === 'true' ) return true;\r\n\t\telse if( value === 'false' ) return false;\r\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\r\n\t}\r\n\r\n\treturn value;\r\n\r\n}\r\n\r\n/**\r\n * Measures the distance in pixels between point a\r\n * and point b.\r\n *\r\n * @param {object} a point with x/y properties\r\n * @param {object} b point with x/y properties\r\n *\r\n * @return {number}\r\n */\r\nexport const distanceBetween = ( a, b ) => {\r\n\r\n\tlet dx = a.x - b.x,\r\n\t\tdy = a.y - b.y;\r\n\r\n\treturn Math.sqrt( dx*dx + dy*dy );\r\n\r\n}\r\n\r\n/**\r\n * Applies a CSS transform to the target element.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} transform\r\n */\r\nexport const transformElement = ( element, transform ) => {\r\n\r\n\telement.style.transform = transform;\r\n\r\n}\r\n\r\n/**\r\n * Element.matches with IE support.\r\n *\r\n * @param {HTMLElement} target The element to match\r\n * @param {String} selector The CSS selector to match\r\n * the element against\r\n *\r\n * @return {Boolean}\r\n */\r\nexport const matches = ( target, selector ) => {\r\n\r\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\r\n\r\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\r\n\r\n}\r\n\r\n/**\r\n * Find the closest parent that matches the given\r\n * selector.\r\n *\r\n * @param {HTMLElement} target The child element\r\n * @param {String} selector The CSS selector to match\r\n * the parents against\r\n *\r\n * @return {HTMLElement} The matched parent or null\r\n * if no matching parent was found\r\n */\r\nexport const closest = ( target, selector ) => {\r\n\r\n\t// Native Element.closest\r\n\tif( typeof target.closest === 'function' ) {\r\n\t\treturn target.closest( selector );\r\n\t}\r\n\r\n\t// Polyfill\r\n\twhile( target ) {\r\n\t\tif( matches( target, selector ) ) {\r\n\t\t\treturn target;\r\n\t\t}\r\n\r\n\t\t// Keep searching\r\n\t\ttarget = target.parentNode;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Handling the fullscreen functionality via the fullscreen API\r\n *\r\n * @see http://fullscreen.spec.whatwg.org/\r\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\r\n */\r\nexport const enterFullscreen = element => {\r\n\r\n\telement = element || document.documentElement;\r\n\r\n\t// Check which implementation is available\r\n\tlet requestMethod = element.requestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\r\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\r\n\t\t\t\t\t\telement.mozRequestFullScreen ||\r\n\t\t\t\t\t\telement.msRequestFullscreen;\r\n\r\n\tif( requestMethod ) {\r\n\t\trequestMethod.apply( element );\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates an HTML element and returns a reference to it.\r\n * If the element already exists the existing instance will\r\n * be returned.\r\n *\r\n * @param {HTMLElement} container\r\n * @param {string} tagname\r\n * @param {string} classname\r\n * @param {string} innerHTML\r\n *\r\n * @return {HTMLElement}\r\n */\r\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\r\n\r\n\t// Find all nodes matching the description\r\n\tlet nodes = container.querySelectorAll( '.' + classname );\r\n\r\n\t// Check all matches to find one which is a direct child of\r\n\t// the specified container\r\n\tfor( let i = 0; i < nodes.length; i++ ) {\r\n\t\tlet testNode = nodes[i];\r\n\t\tif( testNode.parentNode === container ) {\r\n\t\t\treturn testNode;\r\n\t\t}\r\n\t}\r\n\r\n\t// If no node was found, create it now\r\n\tlet node = document.createElement( tagname );\r\n\tnode.className = classname;\r\n\tnode.innerHTML = innerHTML;\r\n\tcontainer.appendChild( node );\r\n\r\n\treturn node;\r\n\r\n}\r\n\r\n/**\r\n * Injects the given CSS styles into the DOM.\r\n *\r\n * @param {string} value\r\n */\r\nexport const createStyleSheet = ( value ) => {\r\n\r\n\tlet tag = document.createElement( 'style' );\r\n\ttag.type = 'text/css';\r\n\r\n\tif( value && value.length > 0 ) {\r\n\t\tif( tag.styleSheet ) {\r\n\t\t\ttag.styleSheet.cssText = value;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttag.appendChild( document.createTextNode( value ) );\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.head.appendChild( tag );\r\n\r\n\treturn tag;\r\n\r\n}\r\n\r\n/**\r\n * Returns a key:value hash of all query params.\r\n */\r\nexport const getQueryHash = () => {\r\n\r\n\tlet query = {};\r\n\r\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\r\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\r\n\t} );\r\n\r\n\t// Basic deserialization\r\n\tfor( let i in query ) {\r\n\t\tlet value = query[ i ];\r\n\r\n\t\tquery[ i ] = deserialize( unescape( value ) );\r\n\t}\r\n\r\n\t// Do not accept new dependencies via query config to avoid\r\n\t// the potential of malicious script injection\r\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\r\n\r\n\treturn query;\r\n\r\n}\r\n\r\n/**\r\n * Returns the remaining height within the parent of the\r\n * target element.\r\n *\r\n * remaining height = [ configured parent height ] - [ current parent height ]\r\n *\r\n * @param {HTMLElement} element\r\n * @param {number} [height]\r\n */\r\nexport const getRemainingHeight = ( element, height = 0 ) => {\r\n\r\n\tif( element ) {\r\n\t\tlet newHeight, oldHeight = element.style.height;\r\n\r\n\t\t// Change the .stretch element height to 0 in order find the height of all\r\n\t\t// the other elements\r\n\t\telement.style.height = '0px';\r\n\r\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\r\n\t\t// Restore it temporarily to its natural height.\r\n\t\telement.parentNode.style.height = 'auto';\r\n\r\n\t\tnewHeight = height - element.parentNode.offsetHeight;\r\n\r\n\t\t// Restore the old height, just in case\r\n\t\telement.style.height = oldHeight + 'px';\r\n\r\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\r\n\t\telement.parentNode.style.removeProperty('height');\r\n\r\n\t\treturn newHeight;\r\n\t}\r\n\r\n\treturn height;\r\n\r\n}\r\n\r\nconst fileExtensionToMimeMap = {\r\n\t'mp4': 'video/mp4',\r\n\t'm4a': 'video/mp4',\r\n\t'ogv': 'video/ogg',\r\n\t'mpeg': 'video/mpeg',\r\n\t'webm': 'video/webm'\r\n}\r\n\r\n/**\r\n * Guess the MIME type for common file formats.\r\n */\r\nexport const getMimeTypeFromFile = ( filename='' ) => {\r\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\r\n}\r\n\r\n/**\r\n * Encodes a string for RFC3986-compliant URL format.\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\r\n *\r\n * @param {string} url\r\n */\r\nexport const encodeRFC3986URI = ( url='' ) => {\r\n\treturn encodeURI(url)\r\n\t  .replace(/%5B/g, \"[\")\r\n\t  .replace(/%5D/g, \"]\")\r\n\t  .replace(\r\n\t\t/[!'()*]/g,\r\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\r\n\t  );\r\n}","const UA = navigator.userAgent;\r\n\r\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\r\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\r\n\r\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\r\n\r\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\r\nimport { isMobile } from '../utils/device.js'\r\n\r\nimport fitty from 'fitty';\r\n\r\n/**\r\n * Handles loading, unloading and playback of slide\r\n * content such as images, videos and iframes.\r\n */\r\nexport default class SlideContent {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Should the given element be preloaded?\r\n\t * Decides based on local element attributes and global config.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tshouldPreload( element ) {\r\n\r\n\t\tif( this.Reveal.isScrollView() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Prefer an explicit global preload setting\r\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\r\n\r\n\t\t// If no global setting is available, fall back on the element's\r\n\t\t// own preload setting\r\n\t\tif( typeof preload !== 'boolean' ) {\r\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\r\n\t\t}\r\n\r\n\t\treturn preload;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the given slide is within the configured view\r\n\t * distance. Shows the slide element and loads any content\r\n\t * that is set to load lazily (data-src).\r\n\t *\r\n\t * @param {HTMLElement} slide Slide to show\r\n\t */\r\n\tload( slide, options = {} ) {\r\n\r\n\t\t// Show the slide element\r\n\t\tslide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t// Media elements with data-src attributes\r\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\r\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\r\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\r\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\telement.removeAttribute( 'data-src' );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Media elements with <source> children\r\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\r\n\t\t\tlet sources = 0;\r\n\r\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\r\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\r\n\t\t\t\tsource.removeAttribute( 'data-src' );\r\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\r\n\t\t\t\tsources += 1;\r\n\t\t\t} );\r\n\r\n\t\t\t// Enable inline video playback in mobile Safari\r\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\r\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\r\n\t\t\t}\r\n\r\n\t\t\t// If we rewrote sources for this video/audio element, we need\r\n\t\t\t// to manually tell it to load from its new origin\r\n\t\t\tif( sources > 0 ) {\r\n\t\t\t\tmedia.load();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\r\n\t\t// Show the corresponding background element\r\n\t\tlet background = slide.slideBackgroundElement;\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'block';\r\n\r\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\r\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\r\n\r\n\t\t\t// If the background contains media, load it\r\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\r\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\r\n\r\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\r\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\r\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\r\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\r\n\r\n\t\t\t\t// Images\r\n\t\t\t\tif( backgroundImage ) {\r\n\t\t\t\t\t// base64\r\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// URL(s)\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\r\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\r\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\r\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\r\n\t\t\t\t\t\t}).join( ',' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Videos\r\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\t\tlet video = document.createElement( 'video' );\r\n\r\n\t\t\t\t\tif( backgroundVideoLoop ) {\r\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( backgroundVideoMuted ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Enable inline playback in mobile Safari\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Mute is required for video to play when using\r\n\t\t\t\t\t// swipe gestures to navigate since they don't\r\n\t\t\t\t\t// count as direct user actions :'(\r\n\t\t\t\t\tif( isMobile ) {\r\n\t\t\t\t\t\tvideo.muted = true;\r\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support comma separated lists of video sources\r\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\r\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\r\n\t\t\t\t\t\tif( type ) {\r\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( video );\r\n\t\t\t\t}\r\n\t\t\t\t// Iframes\r\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\r\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\r\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\r\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\r\n\r\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\r\n\r\n\t\t\t\t\tiframe.style.width  = '100%';\r\n\t\t\t\t\tiframe.style.height = '100%';\r\n\t\t\t\t\tiframe.style.maxHeight = '100%';\r\n\t\t\t\t\tiframe.style.maxWidth = '100%';\r\n\r\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start loading preloadable iframes\r\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\r\n\t\t\tif( backgroundIframeElement ) {\r\n\r\n\t\t\t\t// Check if this iframe is eligible to be preloaded\r\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\r\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\r\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.layout( slide );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JS-dependent layout helpers for the scope.\r\n\t */\r\n\tlayout( scopeElement ) {\r\n\r\n\t\t// Autosize text with the r-fit-text class based on the\r\n\t\t// size of its container. This needs to happen after the\r\n\t\t// slide is visible in order to measure the text.\r\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\r\n\t\t\tfitty( element, {\r\n\t\t\t\tminSize: 24,\r\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\r\n\t\t\t\tobserveMutations: false,\r\n\t\t\t\tobserveWindow: false\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unloads and hides the given slide. This is called when the\r\n\t * slide is moved outside of the configured view distance.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tunload( slide ) {\r\n\r\n\t\t// Hide the slide element\r\n\t\tslide.style.display = 'none';\r\n\r\n\t\t// Hide the corresponding background element\r\n\t\tlet background = this.Reveal.getSlideBackground( slide );\r\n\t\tif( background ) {\r\n\t\t\tbackground.style.display = 'none';\r\n\r\n\t\t\t// Unload any background iframes\r\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\r\n\t\t\t\telement.removeAttribute( 'src' );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Reset lazy-loaded media elements with src attributes\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\r\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\r\n\t\t\telement.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t\t// Reset lazy-loaded media elements with <source> children\r\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\r\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\r\n\t\t\tsource.removeAttribute( 'src' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enforces origin-specific format rules for embedded media.\r\n\t */\r\n\tformatEmbeddedContent() {\r\n\r\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\r\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\r\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\r\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\r\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// YouTube frames must include \"?enablejsapi=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\r\n\r\n\t\t// Vimeo frames must include \"?api=1\"\r\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\r\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start playback of any embedded content inside of\r\n\t * the given element.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstartEmbeddedContent( element ) {\r\n\r\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\r\n\r\n\t\t\t// Restart GIFs\r\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\r\n\t\t\t\t// Setting the same unchanged source like this was confirmed\r\n\t\t\t\t// to work in Chrome, FF & Safari\r\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\r\n\t\t\t} );\r\n\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\r\n\r\n\t\t\t\t\t// If the media is ready, start playback\r\n\t\t\t\t\tif( el.readyState > 1 ) {\r\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\r\n\t\t\t\t\t// of waiting, we initiate playback\r\n\t\t\t\t\telse if( isMobile ) {\r\n\t\t\t\t\t\tlet promise = el.play();\r\n\r\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\r\n\t\t\t\t\t\t// that the viewer can start the media on their own\r\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\r\n\t\t\t\t\t\t\tpromise.catch( () => {\r\n\t\t\t\t\t\t\t\tel.controls = true;\r\n\r\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\r\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\r\n\t\t\t\t\t\t\t\t\tel.controls = false;\r\n\t\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// If the media isn't loaded, wait before playing\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\r\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Normal iframes\r\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\r\n\t\t\t} );\r\n\r\n\t\t\t// Lazy loading iframes\r\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\r\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\r\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts playing an embedded video/audio element after\r\n\t * it has finished loading.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedMedia( event ) {\r\n\r\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\tif( isAttachedToDOM && isVisible ) {\r\n\t\t\tevent.target.currentTime = 0;\r\n\t\t\tevent.target.play();\r\n\t\t}\r\n\r\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \"Starts\" the content of an embedded iframe using the\r\n\t * postMessage API.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tstartEmbeddedIframe( event ) {\r\n\r\n\t\tlet iframe = event.target;\r\n\r\n\t\tif( iframe && iframe.contentWindow ) {\r\n\r\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\r\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\r\n\r\n\t\t\tif( isAttachedToDOM && isVisible ) {\r\n\r\n\t\t\t\t// Prefer an explicit global autoplay setting\r\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\r\n\r\n\t\t\t\t// If no global setting is available, fall back on the element's\r\n\t\t\t\t// own autoplay setting\r\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\r\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// YouTube postMessage API\r\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Vimeo postMessage API\r\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t\t// Generic postMessage API\r\n\t\t\t\telse {\r\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stop playback of any embedded content inside of\r\n\t * the targeted slide.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t */\r\n\tstopEmbeddedContent( element, options = {} ) {\r\n\r\n\t\toptions = extend( {\r\n\t\t\t// Defaults\r\n\t\t\tunloadIframes: true\r\n\t\t}, options );\r\n\r\n\t\tif( element && element.parentNode ) {\r\n\t\t\t// HTML5 media elements\r\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\r\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\r\n\t\t\t\t\tel.pause();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\r\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\r\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\r\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\r\n\t\t\t});\r\n\r\n\t\t\t// YouTube postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Vimeo postMessage API\r\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\r\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\r\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif( options.unloadIframes === true ) {\r\n\t\t\t\t// Unload lazy-loaded iframes\r\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\r\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\r\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\r\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\r\n\t\t\t\t\tel.removeAttribute( 'src' );\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","\r\nexport const SLIDES_SELECTOR = '.slides section';\r\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\r\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\r\n\r\n// Methods that may not be invoked via the postMessage API\r\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\r\n\r\n// Regex for retrieving the fragment style from a class attribute\r\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\r\n\r\n// Slide number formats\r\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\r\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\r\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\r\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\r\n\tSLIDE_NUMBER_FORMAT_CURRENT,\r\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\r\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\r\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\r\n} from \"../utils/constants\";\r\n\r\n/**\r\n * Handles the display of reveal.js' optional slide number.\r\n */\r\nexport default class SlideNumber {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'slide-number';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tlet slideNumberDisplay = 'none';\r\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\r\n\t\t\tif( config.showSlideNumber === 'all' ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\r\n\t\t\t\tslideNumberDisplay = 'block';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element.style.display = slideNumberDisplay;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slide number to match the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update slide number if enabled\r\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the HTML string corresponding to the current slide\r\n\t * number, including formatting.\r\n\t */\r\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet value;\r\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\r\n\r\n\t\tif ( typeof config.slideNumber === 'function' ) {\r\n\t\t\tvalue = config.slideNumber( slide );\r\n\t\t} else {\r\n\t\t\t// Check if a custom number format is available\r\n\t\t\tif( typeof config.slideNumber === 'string' ) {\r\n\t\t\t\tformat = config.slideNumber;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are ONLY vertical slides in this deck, always use\r\n\t\t\t// a flattened slide number\r\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\r\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\r\n\t\t\t}\r\n\r\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\r\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\r\n\r\n\t\t\tvalue = [];\r\n\t\t\tswitch( format ) {\r\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\r\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\r\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\r\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\r\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\r\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies HTML formatting to a slide number before it's\r\n\t * written to the DOM.\r\n\t *\r\n\t * @param {number} a Current slide\r\n\t * @param {string} delimiter Character to separate slide numbers\r\n\t * @param {(number|*)} b Total slides\r\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\r\n\t * @return {string} HTML string fragment\r\n\t */\r\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\r\n\r\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\r\n\t\t\treturn  `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\r\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<a href=\"${url}\">\r\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\r\n\t\t\t\t\t</a>`;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","import {\r\n\tSLIDE_NUMBER_FORMAT_CURRENT,\r\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\r\n} from \"../utils/constants\";\r\n\r\n/**\r\n * Makes it possible to jump to a slide by entering its\r\n * slide number or id.\r\n */\r\nexport default class JumpToSlide {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onInput = this.onInput.bind( this );\r\n\t\tthis.onBlur = this.onBlur.bind( this );\r\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'jump-to-slide';\r\n\r\n    this.jumpInput = document.createElement( 'input' );\r\n    this.jumpInput.type = 'text';\r\n    this.jumpInput.className = 'jump-to-slide-input';\r\n    this.jumpInput.placeholder = 'Jump to slide';\r\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\r\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\r\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\r\n\r\n    this.element.appendChild( this.jumpInput );\r\n\r\n\t}\r\n\r\n\tshow() {\r\n\r\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\t\tthis.jumpInput.focus();\r\n\r\n\t}\r\n\r\n\thide() {\r\n\r\n\t\tif( this.isVisible() ) {\r\n\t\t\tthis.element.remove();\r\n\t\t\tthis.jumpInput.value = '';\r\n\r\n\t\t\tclearTimeout( this.jumpTimeout );\r\n\t\t\tdelete this.jumpTimeout;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tisVisible() {\r\n\r\n\t\treturn !!this.element.parentNode;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the current input and jumps to the given slide.\r\n\t */\r\n\tjump() {\r\n\r\n\t\tclearTimeout( this.jumpTimeout );\r\n\t\tdelete this.jumpTimeout;\r\n\r\n\t\tlet query = this.jumpInput.value.trim( '' );\r\n\t\tlet indices;\r\n\r\n\t\t// When slide numbers are formatted to be a single linear mumber\r\n\t\t// (instead of showing a separate horizontal/vertical index) we\r\n\t\t// use the same format for slide jumps\r\n\t\tif( /^\\d+$/.test( query ) ) {\r\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\r\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\r\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\r\n\t\t\t\tif( slide ) {\r\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !indices ) {\r\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\r\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\r\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\r\n\t\t\t\tquery = query.replace( '.', '/' );\r\n\t\t\t}\r\n\r\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\r\n\t\t}\r\n\r\n\t\t// Still no valid index? Fall back on a text search\r\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\r\n\t\t\tindices = this.search( query );\r\n\t\t}\r\n\r\n\t\tif( indices && query !== '' ) {\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tjumpAfter( delay ) {\r\n\r\n\t\tclearTimeout( this.jumpTimeout );\r\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A lofi search that looks for the given query in all\r\n\t * of our slides and returns the first match.\r\n\t */\r\n\tsearch( query ) {\r\n\r\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\r\n\r\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\r\n\t\t\treturn regex.test( slide.innerText );\r\n\t\t} );\r\n\r\n\t\tif( slide ) {\r\n\t\t\treturn this.Reveal.getIndices( slide );\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverts back to the slide we were on when jump to slide was\r\n\t * invoked.\r\n\t */\r\n\tcancel() {\r\n\r\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\r\n\t\tthis.hide();\r\n\r\n\t}\r\n\r\n\tconfirm() {\r\n\r\n\t\tthis.jump();\r\n\t\tthis.hide();\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\r\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\r\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n\tonKeyDown( event ) {\r\n\r\n\t\tif( event.keyCode === 13 ) {\r\n\t\t\tthis.confirm();\r\n\t\t}\r\n\t\telse if( event.keyCode === 27 ) {\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\tevent.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonInput( event ) {\r\n\r\n\t\tthis.jumpAfter( 200 );\r\n\r\n\t}\r\n\r\n\tonBlur() {\r\n\r\n\t\tsetTimeout( () => this.hide(), 1 );\r\n\r\n\t}\r\n\r\n}","/**\r\n * Converts various color input formats to an {r:0,g:0,b:0} object.\r\n *\r\n * @param {string} color The string representation of a color\r\n * @example\r\n * colorToRgb('#000');\r\n * @example\r\n * colorToRgb('#000000');\r\n * @example\r\n * colorToRgb('rgb(0,0,0)');\r\n * @example\r\n * colorToRgb('rgba(0,0,0)');\r\n *\r\n * @return {{r: number, g: number, b: number, [a]: number}|null}\r\n */\r\nexport const colorToRgb = ( color ) => {\r\n\r\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\r\n\tif( hex3 && hex3[1] ) {\r\n\t\thex3 = hex3[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\r\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\r\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\r\n\t\t};\r\n\t}\r\n\r\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\r\n\tif( hex6 && hex6[1] ) {\r\n\t\thex6 = hex6[1];\r\n\t\treturn {\r\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\r\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\r\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\r\n\tif( rgb ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgb[1], 10 ),\r\n\t\t\tg: parseInt( rgb[2], 10 ),\r\n\t\t\tb: parseInt( rgb[3], 10 )\r\n\t\t};\r\n\t}\r\n\r\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\r\n\tif( rgba ) {\r\n\t\treturn {\r\n\t\t\tr: parseInt( rgba[1], 10 ),\r\n\t\t\tg: parseInt( rgba[2], 10 ),\r\n\t\t\tb: parseInt( rgba[3], 10 ),\r\n\t\t\ta: parseFloat( rgba[4] )\r\n\t\t};\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}\r\n\r\n/**\r\n * Calculates brightness on a scale of 0-255.\r\n *\r\n * @param {string} color See colorToRgb for supported formats.\r\n * @see {@link colorToRgb}\r\n */\r\nexport const colorBrightness = ( color ) => {\r\n\r\n\tif( typeof color === 'string' ) color = colorToRgb( color );\r\n\r\n\tif( color ) {\r\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\r\n\t}\r\n\r\n\treturn null;\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\r\n\r\n/**\r\n * Creates and updates slide backgrounds.\r\n */\r\nexport default class Backgrounds {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'backgrounds';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the slide background elements and appends them\r\n\t * to the background container. One element is created per\r\n\t * slide no matter if the given slide has visible background.\r\n\t */\r\n\tcreate() {\r\n\r\n\t\t// Clear prior backgrounds\r\n\t\tthis.element.innerHTML = '';\r\n\t\tthis.element.classList.add( 'no-transition' );\r\n\r\n\t\t// Iterate over all horizontal slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\r\n\r\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\r\n\r\n\t\t\t// Iterate over all vertical slides\r\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\r\n\r\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\r\n\r\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t\t// Add parallax background if specified\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\r\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\r\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\r\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\r\n\r\n\t\t\t// Make sure the below properties are set on the element - these properties are\r\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\r\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\r\n\t\t\t// these properties after short time delay\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.element.style.backgroundImage = '';\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background for the given slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @param {HTMLElement} container The element that the background\r\n\t * should be appended to\r\n\t * @return {HTMLElement} New background div\r\n\t */\r\n\tcreateBackground( slide, container ) {\r\n\r\n\t\t// Main slide background element\r\n\t\tlet element = document.createElement( 'div' );\r\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\r\n\r\n\t\t// Inner background element that wraps images/videos/iframes\r\n\t\tlet contentElement = document.createElement( 'div' );\r\n\t\tcontentElement.className = 'slide-background-content';\r\n\r\n\t\telement.appendChild( contentElement );\r\n\t\tcontainer.appendChild( element );\r\n\r\n\t\tslide.slideBackgroundElement = element;\r\n\t\tslide.slideBackgroundContentElement = contentElement;\r\n\r\n\t\t// Syncs the background to reflect all current background settings\r\n\t\tthis.sync( slide );\r\n\r\n\t\treturn element;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders all of the visual properties of a slide background\r\n\t * based on the various background attributes.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tsync( slide ) {\r\n\r\n\t\tconst element = slide.slideBackgroundElement,\r\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\r\n\r\n\t\tconst data = {\r\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\r\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\r\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\r\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\r\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\r\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\r\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\r\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\r\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\r\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\r\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\r\n\t\t};\r\n\r\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\r\n\r\n\t\t// Reset the prior background state in case this is not the\r\n\t\t// initial sync\r\n\t\tslide.classList.remove( 'has-dark-background' );\r\n\t\tslide.classList.remove( 'has-light-background' );\r\n\r\n\t\telement.removeAttribute( 'data-loaded' );\r\n\t\telement.removeAttribute( 'data-background-hash' );\r\n\t\telement.removeAttribute( 'data-background-size' );\r\n\t\telement.removeAttribute( 'data-background-transition' );\r\n\t\telement.style.backgroundColor = '';\r\n\r\n\t\tcontentElement.style.backgroundSize = '';\r\n\t\tcontentElement.style.backgroundRepeat = '';\r\n\t\tcontentElement.style.backgroundPosition = '';\r\n\t\tcontentElement.style.backgroundImage = '';\r\n\t\tcontentElement.style.opacity = '';\r\n\t\tcontentElement.innerHTML = '';\r\n\r\n\t\tif( data.background ) {\r\n\t\t\t// Auto-wrap image urls in url(...)\r\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\r\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.background = data.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create a hash for this combination of background settings.\r\n\t\t// This is used to determine when two slide backgrounds are\r\n\t\t// the same.\r\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\r\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\r\n\t\t}\r\n\r\n\t\t// Additional and optional background properties\r\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\r\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\r\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\r\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\r\n\r\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\r\n\r\n\t\t// Background image options are set on the content wrapper\r\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\r\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\r\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\r\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\r\n\r\n\t\tconst contrastClass = this.getContrastClass( slide );\r\n\r\n\t\tif( typeof contrastClass === 'string' ) {\r\n\t\t\tslide.classList.add( contrastClass );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a class name that can be applied to a slide to indicate\r\n\t * if it has a light or dark background.\r\n\t *\r\n\t * @param {*} slide\r\n\t *\r\n\t * @returns {string|null}\r\n\t */\r\n\tgetContrastClass( slide ) {\r\n\r\n\t\tconst element = slide.slideBackgroundElement;\r\n\r\n\t\t// If this slide has a background color, we add a class that\r\n\t\t// signals if it is light or dark. If the slide has no background\r\n\t\t// color, no class will be added\r\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\r\n\r\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\r\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\r\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\r\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\r\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( contrastColor ) {\r\n\t\t\tconst rgb = colorToRgb( contrastColor );\r\n\r\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\r\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\r\n\t\t\t// an element with no background\r\n\t\t\tif( rgb && rgb.a !== 0 ) {\r\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\r\n\t\t\t\t\treturn 'has-dark-background';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn 'has-light-background';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\r\n\t */\r\n\tbubbleSlideContrastClassToElement( slide, target ) {\r\n\r\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\r\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\r\n\t\t\t\ttarget.classList.add( classToBubble );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttarget.classList.remove( classToBubble );\r\n\t\t\t}\r\n\t\t}, this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the background elements to reflect the current\r\n\t * slide.\r\n\t *\r\n\t * @param {boolean} includeAll If true, the backgrounds of\r\n\t * all vertical slides (not just the present) will be updated.\r\n\t */\r\n\tupdate( includeAll = false ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tlet currentBackground = null;\r\n\r\n\t\t// Reverse past/future classes when in RTL mode\r\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\r\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\r\n\r\n\t\t// Update the classes of all backgrounds to match the\r\n\t\t// states of their slides (past/present/future)\r\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\r\n\r\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\tif( h < indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\r\n\t\t\t}\r\n\t\t\telse if ( h > indices.h ) {\r\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundh.classList.add( 'present' );\r\n\r\n\t\t\t\t// Store a reference to the current background element\r\n\t\t\t\tcurrentBackground = backgroundh;\r\n\t\t\t}\r\n\r\n\t\t\tif( includeAll || h === indices.h ) {\r\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\r\n\r\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\r\n\r\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\r\n\r\n\t\t\t\t\tif( v < indexv ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( v > indexv ) {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\r\n\r\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\r\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\t// Stop content inside of previous backgrounds\r\n\t\tif( this.previousBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\r\n\r\n\t\t}\r\n\r\n\t\t// Start content in the current background\r\n\t\tif( currentBackground ) {\r\n\r\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\r\n\r\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\r\n\t\t\tif( currentBackgroundContent ) {\r\n\r\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\r\n\r\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\r\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\r\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\r\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Don't transition between identical backgrounds. This\r\n\t\t\t// prevents unwanted flicker.\r\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\r\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\r\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\r\n\t\t\t\tthis.element.classList.add( 'no-transition' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.previousBackground = currentBackground;\r\n\r\n\t\t}\r\n\r\n\t\t// If there's a background brightness flag for this slide,\r\n\t\t// bubble it to the .reveal container\r\n\t\tif( currentSlide ) {\r\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\r\n\t\t}\r\n\r\n\t\t// Allow the first background to apply without transition\r\n\t\tsetTimeout( () => {\r\n\t\t\tthis.element.classList.remove( 'no-transition' );\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the position of the parallax background based\r\n\t * on the current slide index.\r\n\t */\r\n\tupdateParallax() {\r\n\r\n\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\r\n\r\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\r\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\r\n\r\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\r\n\t\t\t\tbackgroundWidth, backgroundHeight;\r\n\r\n\t\t\tif( backgroundSize.length === 1 ) {\r\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\r\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\r\n\t\t\t}\r\n\r\n\t\t\tlet slideWidth = this.element.offsetWidth,\r\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\r\n\t\t\t\thorizontalOffsetMultiplier,\r\n\t\t\t\thorizontalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\r\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\r\n\t\t\t}\r\n\r\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\r\n\r\n\t\t\tlet slideHeight = this.element.offsetHeight,\r\n\t\t\t\tverticalSlideCount = verticalSlides.length,\r\n\t\t\t\tverticalOffsetMultiplier,\r\n\t\t\t\tverticalOffset;\r\n\r\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\r\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\r\n\t\t\t}\r\n\r\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\r\n\r\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}\r\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\r\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\r\n\r\n// Counter used to generate unique IDs for auto-animated elements\r\nlet autoAnimateCounter = 0;\r\n\r\n/**\r\n * Automatically animates matching elements across\r\n * slides with the [data-auto-animate] attribute.\r\n */\r\nexport default class AutoAnimate {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Runs an auto-animation between the given slides.\r\n\t *\r\n\t * @param  {HTMLElement} fromSlide\r\n\t * @param  {HTMLElement} toSlide\r\n\t */\r\n\trun( fromSlide, toSlide ) {\r\n\r\n\t\t// Clean up after prior animations\r\n\t\tthis.reset();\r\n\r\n\t\tlet allSlides = this.Reveal.getSlides();\r\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\r\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\r\n\r\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\r\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\r\n\t\t// physically latter slide (independent of slide direction)\r\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\r\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \r\n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\r\n\r\n\t\t\t// Create a new auto-animate sheet\r\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\r\n\r\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\r\n\r\n\t\t\t// Set our starting state\r\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\r\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\r\n\r\n\t\t\t// Flag the navigation direction, needed for fragment buildup\r\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\r\n\r\n\t\t\t// If the from-slide is hidden because it has moved outside\r\n\t\t\t// the view distance, we need to temporarily show it while\r\n\t\t\t// measuring\r\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\r\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\r\n\r\n\t\t\t// Inject our auto-animate styles for this transition\r\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\r\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\r\n\t\t\t} );\r\n\r\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\r\n\r\n\t\t\t// Animate unmatched elements, if enabled\r\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\r\n\r\n\t\t\t\t// Our default timings for unmatched elements\r\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\r\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\r\n\r\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\r\n\r\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\r\n\t\t\t\t\tlet id = 'unmatched';\r\n\r\n\t\t\t\t\t// If there is a duration or delay set specifically for this\r\n\t\t\t\t\t// element our unmatched elements should adhere to those\r\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\r\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\r\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\r\n\r\n\t\t\t\t}, this );\r\n\r\n\t\t\t\t// Our default transition for unmatched elements\r\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Setting the whole chunk of CSS at once is the most\r\n\t\t\t// efficient way to do this. Using sheet.insertRule\r\n\t\t\t// is multiple factors slower.\r\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\r\n\r\n\t\t\t// Start the animation next cycle\r\n\t\t\trequestAnimationFrame( () => {\r\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\r\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\r\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\r\n\r\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'autoanimate',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tfromSlide,\r\n\t\t\t\t\ttoSlide,\r\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rolls back all changes that we've made to the DOM so\r\n\t * that as part of animating.\r\n\t */\r\n\treset() {\r\n\r\n\t\t// Reset slides\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\r\n\t\t\telement.dataset.autoAnimate = '';\r\n\t\t} );\r\n\r\n\t\t// Reset elements\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\r\n\t\t\tdelete element.dataset.autoAnimateTarget;\r\n\t\t} );\r\n\r\n\t\t// Remove the animation sheet\r\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\r\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\r\n\t\t\tthis.autoAnimateStyleSheet = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a FLIP animation where the `to` element starts out\r\n\t * in the `from` element position and animates to its original\r\n\t * state.\r\n\t *\r\n\t * @param {HTMLElement} from\r\n\t * @param {HTMLElement} to\r\n\t * @param {Object} elementOptions Options for this element pair\r\n\t * @param {Object} animationOptions Options set at the slide level\r\n\t * @param {String} id Unique ID that we can use to identify this\r\n\t * auto-animate element in the DOM\r\n\t */\r\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\r\n\r\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\r\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\r\n\t\tfrom.dataset.autoAnimateTarget = '';\r\n\t\tto.dataset.autoAnimateTarget = id;\r\n\r\n\t\t// Each element may override any of the auto-animate options\r\n\t\t// like transition easing, duration and delay via data-attributes\r\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\r\n\r\n\t\t// If we're using a custom element matcher the element options\r\n\t\t// may contain additional transition overrides\r\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\r\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\r\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\r\n\r\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\r\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\r\n\r\n\t\t// Maintain fragment visibility for matching elements when\r\n\t\t// we're navigating forwards, this way the viewer won't need\r\n\t\t// to step through the same fragments twice\r\n\t\tif( to.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\r\n\t\t\t// conflicts with fragment animations\r\n\t\t\tdelete toProps.styles['opacity'];\r\n\r\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\r\n\r\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\r\n\r\n\t\t\t\t// Only skip the fragment if the fragment animation style\r\n\t\t\t\t// remains unchanged\r\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\r\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If translation and/or scaling are enabled, css transform\r\n\t\t// the 'to' element so that it matches the position and size\r\n\t\t// of the 'from' element\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\r\n\t\t\tlet presentationScale = this.Reveal.getScale();\r\n\r\n\t\t\tlet delta = {\r\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\r\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\r\n\t\t\t\tscaleX: fromProps.width / toProps.width,\r\n\t\t\t\tscaleY: fromProps.height / toProps.height\r\n\t\t\t};\r\n\r\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\r\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\r\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\r\n\r\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\r\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\r\n\r\n\t\t\t// No need to transform if nothing's changed\r\n\t\t\tif( translate || scale ) {\r\n\r\n\t\t\t\tlet transform = [];\r\n\r\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\r\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\r\n\r\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\r\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\r\n\r\n\t\t\t\ttoProps.styles['transform'] = 'none';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Delete all unchanged 'to' styles\r\n\t\tfor( let propertyName in toProps.styles ) {\r\n\t\t\tconst toValue = toProps.styles[propertyName];\r\n\t\t\tconst fromValue = fromProps.styles[propertyName];\r\n\r\n\t\t\tif( toValue === fromValue ) {\r\n\t\t\t\tdelete toProps.styles[propertyName];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// If these property values were set via a custom matcher providing\r\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\r\n\t\t\t\tif( toValue.explicitValue === true ) {\r\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( fromValue.explicitValue === true ) {\r\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet css = '';\r\n\r\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\r\n\r\n\t\t// Only create animate this element IF at least one style\r\n\t\t// property has changed\r\n\t\tif( toStyleProperties.length > 0 ) {\r\n\r\n\t\t\t// Instantly move to the 'from' state\r\n\t\t\tfromProps.styles['transition'] = 'none';\r\n\r\n\t\t\t// Animate towards the 'to' state\r\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\r\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\r\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\r\n\r\n\t\t\t// Build up our custom CSS. We need to override inline styles\r\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\r\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\r\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\r\n\t\t\t} ).join( '' );\r\n\r\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\r\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\r\n\r\n\t\t}\r\n\r\n\t\treturn css;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the auto-animate options for the given element.\r\n\t *\r\n\t * @param {HTMLElement} element Element to pick up options\r\n\t * from, either a slide or an animation target\r\n\t * @param {Object} [inheritedOptions] Optional set of existing\r\n\t * options\r\n\t */\r\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\r\n\r\n\t\tlet options = {\r\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\r\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\r\n\t\t\tdelay: 0\r\n\t\t};\r\n\r\n\t\toptions = extend( options, inheritedOptions );\r\n\r\n\t\t// Inherit options from parent elements\r\n\t\tif( element.parentNode ) {\r\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\r\n\t\t\tif( autoAnimatedParent ) {\r\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateEasing ) {\r\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDuration ) {\r\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\r\n\t\t}\r\n\r\n\t\tif( element.dataset.autoAnimateDelay ) {\r\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\r\n\t\t}\r\n\r\n\t\treturn options;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing all of the properties\r\n\t * that can be auto-animated for the given element and\r\n\t * their current computed values.\r\n\t *\r\n\t * @param {String} direction 'from' or 'to'\r\n\t */\r\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\tlet properties = { styles: [] };\r\n\r\n\t\t// Position and size\r\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\r\n\t\t\tlet bounds;\r\n\r\n\t\t\t// Custom auto-animate may optionally return a custom tailored\r\n\t\t\t// measurement function\r\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\r\n\t\t\t\tbounds = elementOptions.measure( element );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( config.center ) {\r\n\t\t\t\t\t// More precise, but breaks when used in combination\r\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\r\n\t\t\t\t\tbounds = element.getBoundingClientRect();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet scale = this.Reveal.getScale();\r\n\t\t\t\t\tbounds = {\r\n\t\t\t\t\t\tx: element.offsetLeft * scale,\r\n\t\t\t\t\t\ty: element.offsetTop * scale,\r\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\r\n\t\t\t\t\t\theight: element.offsetHeight * scale\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tproperties.x = bounds.x;\r\n\t\t\tproperties.y = bounds.y;\r\n\t\t\tproperties.width = bounds.width;\r\n\t\t\tproperties.height = bounds.height;\r\n\t\t}\r\n\r\n\t\tconst computedStyles = getComputedStyle( element );\r\n\r\n\t\t// CSS styles\r\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\r\n\t\t\tlet value;\r\n\r\n\t\t\t// `style` is either the property name directly, or an object\r\n\t\t\t// definition of a style property\r\n\t\t\tif( typeof style === 'string' ) style = { property: style };\r\n\r\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\r\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\r\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\r\n\t\t\t\tif( style.property === 'line-height' ) {\r\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( isNaN(value) ) {\r\n\t\t\t\t\tvalue = computedStyles[style.property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( value !== '' ) {\r\n\t\t\t\tproperties.styles[style.property] = value;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\treturn properties;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all element pairs that we can animate\r\n\t * between the given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t *\r\n\t * @return {Array} Each value is an array where [0] is\r\n\t * the element we're animating from and [1] is the\r\n\t * element we're animating to\r\n\t */\r\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\r\n\r\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\r\n\r\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\r\n\r\n\t\tlet reserved = [];\r\n\r\n\t\t// Remove duplicate pairs\r\n\t\treturn pairs.filter( ( pair, index ) => {\r\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\r\n\t\t\t\treserved.push( pair.to );\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Identifies matching elements between slides.\r\n\t *\r\n\t * You can specify a custom matcher function by using\r\n\t * the `autoAnimateMatcher` config option.\r\n\t */\r\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\r\n\r\n\t\tlet pairs = [];\r\n\r\n\t\tconst codeNodes = 'pre';\r\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\r\n\t\tconst mediaNodes = 'img, video, iframe';\r\n\r\n\t\t// Explicit matches via data-id\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\r\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\r\n\t\t} );\r\n\r\n\t\t// Text\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\t// Media\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\r\n\t\t} );\r\n\r\n\t\t// Code\r\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\r\n\t\t\treturn node.nodeName + ':::' + node.innerText;\r\n\t\t} );\r\n\r\n\t\tpairs.forEach( pair => {\r\n\t\t\t// Disable scale transformations on text nodes, we transition\r\n\t\t\t// each individual text property instead\r\n\t\t\tif( matches( pair.from, textNodes ) ) {\r\n\t\t\t\tpair.options = { scale: false };\r\n\t\t\t}\r\n\t\t\t// Animate individual lines of code\r\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\r\n\r\n\t\t\t\t// Transition the code block's width and height instead of scaling\r\n\t\t\t\t// to prevent its content from being squished\r\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\r\n\r\n\t\t\t\t// Lines of code\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\r\n\t\t\t\t\treturn node.textContent;\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Line numbers\r\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\r\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\r\n\t\t\t\t}, {\r\n\t\t\t\t\tscale: false,\r\n\t\t\t\t\tstyles: [ 'width' ],\r\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\treturn pairs;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method which returns a bounding box based on\r\n\t * the given elements offset coordinates.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @return {Object} x, y, width, height\r\n\t */\r\n\tgetLocalBoundingBox( element ) {\r\n\r\n\t\tconst presentationScale = this.Reveal.getScale();\r\n\r\n\t\treturn {\r\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\r\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\r\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\r\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds matching elements between two slides.\r\n\t *\r\n\t * @param {Array} pairs            \tList of pairs to push matches to\r\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\r\n\t * @param {HTMLElement} toScope     Scope within the to element exists\r\n\t * @param {String} selector         CSS selector of the element to match\r\n\t * @param {Function} serializer     A function that accepts an element and returns\r\n\t *                                  a stringified ID based on its contents\r\n\t * @param {Object} animationOptions Optional config options for this pair\r\n\t */\r\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\r\n\r\n\t\tlet fromMatches = {};\r\n\t\tlet toMatches = {};\r\n\r\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\tif( typeof key === 'string' && key.length ) {\r\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\r\n\t\t\t\tfromMatches[key].push( element );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\r\n\t\t\tconst key = serializer( element );\r\n\t\t\ttoMatches[key] = toMatches[key] || [];\r\n\t\t\ttoMatches[key].push( element );\r\n\r\n\t\t\tlet fromElement;\r\n\r\n\t\t\t// Retrieve the 'from' element\r\n\t\t\tif( fromMatches[key] ) {\r\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\r\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\r\n\r\n\t\t\t\t// If there are multiple identical from elements, retrieve\r\n\t\t\t\t// the one at the same index as our to-element.\r\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t\t// If there are no matching from-elements at the same index,\r\n\t\t\t\t// use the last one.\r\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\r\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\r\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If we've got a matching pair, push it to the list of pairs\r\n\t\t\tif( fromElement ) {\r\n\t\t\t\tpairs.push({\r\n\t\t\t\t\tfrom: fromElement,\r\n\t\t\t\t\tto: element,\r\n\t\t\t\t\toptions: animationOptions\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a all elements within the given scope that should\r\n\t * be considered unmatched in an auto-animate transition. If\r\n\t * fading of unmatched elements is turned on, these elements\r\n\t * will fade when going between auto-animate slides.\r\n\t *\r\n\t * Note that parents of auto-animate targets are NOT considered\r\n\t * unmatched since fading them would break the auto-animation.\r\n\t *\r\n\t * @param {HTMLElement} rootElement\r\n\t * @return {Array}\r\n\t */\r\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\r\n\r\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\r\n\r\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\r\n\r\n\t\t\t// The element is unmatched if\r\n\t\t\t// - It is not an auto-animate target\r\n\t\t\t// - It does not contain any auto-animate targets\r\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\r\n\t\t\t\tresult.push( element );\r\n\t\t\t}\r\n\r\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\r\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}, [] );\r\n\r\n\t}\r\n\r\n}\r\n","import { HORIZONTAL_SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll } from '../utils/util.js'\r\n\r\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\r\nconst MAX_PROGRESS_SPACING = 4;\r\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\r\nconst MIN_PLAYHEAD_HEIGHT = 8;\r\n\r\n/**\r\n * The scroll view lets you read a reveal.js presentation\r\n * as a linear scrollable page.\r\n */\r\nexport default class ScrollView {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\t\tthis.activatedCallbacks = [];\r\n\r\n\t\tthis.onScroll = this.onScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the scroll view. This rearranges the presentation DOM\r\n\t * by—among other things—wrapping each slide in a page element.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\tif( this.active ) return;\r\n\r\n\t\tconst stateBeforeActivation = this.Reveal.getState();\r\n\r\n\t\tthis.active = true;\r\n\r\n\t\t// Store the full presentation HTML so that we can restore it\r\n\t\t// when/if the scroll view is deactivated\r\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\r\n\r\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\r\n\r\n\t\tlet presentationBackground;\r\n\r\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\r\n\t\tif( viewportStyles && viewportStyles.background ) {\r\n\t\t\tpresentationBackground = viewportStyles.background;\r\n\t\t}\r\n\r\n\t\tconst pageElements = [];\r\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\r\n\r\n\t\tlet previousSlide;\r\n\r\n\t\t// Creates a new page element and appends the given slide/bg\r\n\t\t// to it.\r\n\t\tconst createPageElement = ( slide, h, v ) => {\r\n\r\n\t\t\tlet contentContainer;\r\n\r\n\t\t\t// If this slide is part of an auto-animation sequence, we\r\n\t\t\t// group it under the same page element as the previous slide\r\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\r\n\t\t\t\tcontentContainer = document.createElement( 'div' );\r\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\r\n\t\t\t\tcontentContainer.style.display = 'none';\r\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement( 'div' );\r\n\t\t\t\tpage.className = 'scroll-page';\r\n\t\t\t\tpageElements.push( page );\r\n\r\n\t\t\t\t// Copy the presentation-wide background to each page\r\n\t\t\t\tif( presentationBackground ) {\r\n\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\r\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\r\n\t\t\t\tpage.appendChild( stickyContainer );\r\n\r\n\t\t\t\tcontentContainer = document.createElement( 'div' );\r\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\r\n\t\t\t\tstickyContainer.appendChild( contentContainer );\r\n\t\t\t}\r\n\r\n\t\t\tcontentContainer.appendChild( slide );\r\n\r\n\t\t\tslide.classList.remove( 'past', 'future' );\r\n\t\t\tslide.setAttribute( 'data-index-h', h );\r\n\t\t\tslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\r\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t}\r\n\r\n\t\t\tpreviousSlide = slide;\r\n\r\n\t\t}\r\n\r\n\t\t// Slide and slide background layout\r\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\r\n\r\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\r\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\r\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v );\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\tthis.createProgressBar();\r\n\r\n\t\t// Remove leftover stacks\r\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\r\n\r\n\t\t// Add our newly created pages to the DOM\r\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\r\n\r\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\r\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\r\n\r\n\t\tthis.Reveal.layout();\r\n\t\tthis.Reveal.setState( stateBeforeActivation );\r\n\r\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\r\n\t\tthis.activatedCallbacks = [];\r\n\r\n\t\tthis.restoreScrollPosition();\r\n\r\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\r\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Deactivates the scroll view and restores the standard slide-based\r\n\t * presentation.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\tif( !this.active ) return;\r\n\r\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\r\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\r\n\r\n\t\tthis.removeProgressBar();\r\n\r\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\r\n\t\tthis.Reveal.sync();\r\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\r\n\r\n\t\tthis.slideHTMLBeforeActivation = null;\r\n\r\n\t}\r\n\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the scroll view is currently active.\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the progress bar component.\r\n\t */\r\n\tcreateProgressBar() {\r\n\r\n\t\tthis.progressBar = document.createElement( 'div' );\r\n\t\tthis.progressBar.className = 'scrollbar';\r\n\r\n\t\tthis.progressBarInner = document.createElement( 'div' );\r\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\r\n\t\tthis.progressBar.appendChild( this.progressBarInner );\r\n\r\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\r\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\r\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\r\n\r\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\r\n\r\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\r\n\r\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\r\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\r\n\r\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\r\n\r\n\t\t};\r\n\r\n\t\tconst handleDocumentMouseUp = ( event ) => {\r\n\r\n\t\t\tthis.draggingProgressBar = false;\r\n\t\t\tthis.showProgressBar();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\r\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\r\n\r\n\t\t};\r\n\r\n\t\tconst handleMouseDown = ( event ) => {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tthis.draggingProgressBar = true;\r\n\r\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\r\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\r\n\r\n\t\t\thandleDocumentMouseMove( event );\r\n\r\n\t\t};\r\n\r\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\r\n\r\n\t}\r\n\r\n\tremoveProgressBar() {\r\n\r\n\t\tif( this.progressBar ) {\r\n\t\t\tthis.progressBar.remove();\r\n\t\t\tthis.progressBar = null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlayout() {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tthis.syncPages();\r\n\t\t\tthis.syncScrollPosition();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates our pages to match the latest configuration and\r\n\t * presentation size.\r\n\t */\r\n\tsyncPages() {\r\n\r\n\t\tconst config = this.Reveal.getConfig();\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = this.Reveal.getScale();\r\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\r\n\r\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\r\n\t\tconst compactHeight = slideSize.height * scale;\r\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\r\n\r\n\t\t// The height that needs to be scrolled between scroll triggers\r\n\t\tconst scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\r\n\r\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\r\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\r\n\r\n\t\t// This will hold all scroll triggers used to show/hide slides\r\n\t\tthis.slideTriggers = [];\r\n\r\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\r\n\r\n\t\tthis.pages = pageElements.map( pageElement => {\r\n\t\t\tconst page = this.createPage({\r\n\t\t\t\tpageElement,\r\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\r\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\r\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\r\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\r\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\r\n\t\t\t\tautoAnimatePages: []\r\n\t\t\t});\r\n\r\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\r\n\r\n\t\t\tthis.slideTriggers.push({\r\n\t\t\t\tpage: page,\r\n\t\t\t\tactivate: () => this.activatePage( page ),\r\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\r\n\t\t\t});\r\n\r\n\t\t\t// Create scroll triggers that show/hide fragments\r\n\t\t\tthis.createFragmentTriggersForPage( page );\r\n\r\n\t\t\t// Create scroll triggers for triggering auto-animate steps\r\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\r\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\r\n\t\t\t}\r\n\r\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\r\n\r\n\t\t\t// Each auto-animate step may include its own scroll triggers\r\n\t\t\t// for fragments, ensure we count those as well\r\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\r\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\r\n\t\t\t}, page.autoAnimatePages.length );\r\n\r\n\t\t\t// Clean up from previous renders\r\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\r\n\r\n\t\t\t// Create snap points for all scroll triggers\r\n\t\t\t// - Can't be absolute in FF\r\n\t\t\t// - Can't be 0-height in Safari\r\n\t\t\t// - Can't use snap-align on parent in Safari because then\r\n\t\t\t//   inner triggers won't work\r\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\r\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\r\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\r\n\t\t\t\ttriggerStick.style.height = scrollTriggerHeight + 'px';\r\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\r\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\r\n\r\n\t\t\t\tif( i === 0 ) {\r\n\t\t\t\t\ttriggerStick.style.marginTop = -scrollTriggerHeight + 'px';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\r\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\r\n\t\t\t// a sticky slide.\r\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\r\n\t\t\t\tpage.pageHeight = viewportHeight;\r\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpage.pageHeight = pageHeight;\r\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\r\n\t\t\t}\r\n\r\n\t\t\t// Add scroll padding based on how many scroll triggers we have\r\n\t\t\tpage.scrollPadding = scrollTriggerHeight * totalScrollTriggerCount;\r\n\r\n\t\t\t// The total height including scrollable space\r\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\r\n\r\n\t\t\t// This is used to pad the height of our page in CSS\r\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\r\n\r\n\t\t\t// If this is a sticky page, stick it to the vertical center\r\n\t\t\tif( totalScrollTriggerCount > 0 ) {\r\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\r\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpage.stickyElement.style.position = 'relative';\r\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\r\n\t\t\t}\r\n\r\n\t\t\treturn page;\r\n\t\t} );\r\n\r\n\t\tthis.setTriggerRanges();\r\n\r\n\t\t/*\r\n\t\tconsole.log(this.slideTriggers.map( t => {\r\n\t\t\treturn {\r\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\r\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\r\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\r\n\t\t\t\t}).join( ', ' ),\r\n\t\t\t}\r\n\t\t}))\r\n\t\t*/\r\n\r\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\r\n\r\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\r\n\t\t\t// Create the progress bar if it doesn't already exist\r\n\t\t\tif( !this.progressBar ) this.createProgressBar();\r\n\r\n\t\t\tthis.syncProgressBar();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.removeProgressBar();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates and sets the scroll range for all of our scroll\r\n\t * triggers.\r\n\t */\r\n\tsetTriggerRanges() {\r\n\r\n\t\t// Calculate the total number of scroll triggers\r\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\r\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\r\n\t\t}, 0 );\r\n\r\n\t\tlet rangeStart = 0;\r\n\r\n\t\t// Calculate the scroll range of each scroll trigger on a scale\r\n\t\t// of 0-1\r\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\r\n\t\t\ttrigger.range = [\r\n\t\t\t\trangeStart,\r\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\r\n\t\t\t];\r\n\r\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\r\n\t\t\t// Set the range for each inner scroll trigger\r\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\r\n\t\t\t\tscrollTrigger.range = [\r\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\r\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\r\n\t\t\t\t];\r\n\t\t\t} );\r\n\r\n\t\t\trangeStart = trigger.range[1];\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates one scroll trigger for each fragments in the given page.\r\n\t *\r\n\t * @param {*} page\r\n\t */\r\n\tcreateFragmentTriggersForPage( page, slideElement ) {\r\n\r\n\t\tslideElement = slideElement || page.slideElement;\r\n\r\n\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t// are part of the same group.\r\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t// Create scroll triggers that show/hide fragments\r\n\t\tif( fragmentGroups.length ) {\r\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tpage.scrollTriggers.push(\r\n\t\t\t\t// Trigger for the initial state with no fragments visible\r\n\t\t\t\t{\r\n\t\t\t\t\tactivate: () => {\r\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\t// Triggers for each fragment group\r\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\r\n\t\t\t\tpage.scrollTriggers.push({\r\n\t\t\t\t\tactivate: () => {\r\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\r\n\t\treturn page.scrollTriggers.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Creates scroll triggers for the auto-animate steps in the\r\n\t * given page.\r\n\t *\r\n\t * @param {*} page\r\n\t */\r\n\tcreateAutoAnimateTriggersForPage( page ) {\r\n\r\n\t\tif( page.autoAnimateElements.length > 0 ) {\r\n\r\n\t\t\t// Triggers for each subsequent auto-animate slide\r\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\r\n\t\t\t\tlet autoAnimatePage = this.createPage({\r\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\r\n\t\t\t\t\tcontentElement: autoAnimateElement,\r\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\r\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\r\n\r\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\r\n\r\n\t\t\t\t// Return our slide trigger\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpage: autoAnimatePage,\r\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\r\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Helper method for creating a page definition and adding\r\n\t * required fields. A \"page\" is a slide or auto-animate step.\r\n\t */\r\n\tcreatePage( page ) {\r\n\r\n\t\tpage.scrollTriggers = [];\r\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\r\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\treturn page;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rerenders progress bar segments so that they match the current\r\n\t * reveal.js config and size.\r\n\t */\r\n\tsyncProgressBar() {\r\n\r\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\r\n\r\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\r\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\r\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\r\n\r\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\r\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\r\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\r\n\r\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\r\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\r\n\r\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\r\n\r\n\t\t// Don't show individual segments if they're too small\r\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\r\n\r\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\r\n\r\n\t\t\t\tconst { page } = slideTrigger;\r\n\r\n\t\t\t\t// Visual representation of a slide\r\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\r\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\r\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\r\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\r\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\r\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\r\n\r\n\t\t\t\t// Visual representations of each scroll trigger\r\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\r\n\r\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\r\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\r\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\r\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\r\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\r\n\r\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\r\n\r\n\t\t\t\t\treturn triggerElement;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current scroll position and updates our active\r\n\t * trigger states accordingly.\r\n\t */\r\n\tsyncScrollPosition() {\r\n\r\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\r\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\r\n\r\n\t\tconst scrollTop = this.viewportElement.scrollTop;\r\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\r\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\r\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\r\n\r\n\t\tlet activePage;\r\n\r\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\r\n\t\t\tconst { page } = trigger;\r\n\r\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\r\n\r\n\t\t\t// Load slides that are within the preload range\r\n\t\t\tif( shouldPreload && !page.loaded ) {\r\n\t\t\t\tpage.loaded = true;\r\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\r\n\t\t\t}\r\n\t\t\telse if( page.loaded ) {\r\n\t\t\t\tpage.loaded = false;\r\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\r\n\t\t\t}\r\n\r\n\t\t\t// If we're within this trigger range, activate it\r\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\r\n\t\t\t\tthis.activateTrigger( trigger );\r\n\t\t\t\tactivePage = trigger.page;\r\n\t\t\t}\r\n\t\t\t// .. otherwise deactivate\r\n\t\t\telse if( trigger.active ) {\r\n\t\t\t\tthis.deactivateTrigger( trigger );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Each page can have its own scroll triggers, check if any of those\r\n\t\t// need to be activated/deactivated\r\n\t\tif( activePage ) {\r\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\r\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\r\n\t\t\t\t\tthis.activateTrigger( trigger );\r\n\t\t\t\t}\r\n\t\t\t\telse if( trigger.active ) {\r\n\t\t\t\t\tthis.deactivateTrigger( trigger );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\t// Update our visual progress indication\r\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the progress bar playhead to the specified position.\r\n\t *\r\n\t * @param {number} progress 0-1\r\n\t */\r\n\tsetProgressBarValue( progress ) {\r\n\r\n\t\tif( this.progressBar ) {\r\n\r\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\r\n\r\n\t\t\tthis.getAllPages()\r\n\t\t\t\t.filter( page => page.progressBarSlide )\r\n\t\t\t\t.forEach( ( page ) => {\r\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\r\n\r\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\r\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\r\n\t\t\t\t\t} );\r\n\t\t\t\t} );\r\n\r\n\t\t\tthis.showProgressBar();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Show the progress bar and, if configured, automatically hide\r\n\t * it after a delay.\r\n\t */\r\n\tshowProgressBar() {\r\n\r\n\t\tthis.progressBar.classList.add( 'visible' );\r\n\r\n\t\tclearTimeout( this.hideProgressBarTimeout );\r\n\r\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\r\n\r\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\r\n\t\t\t\tif( this.progressBar ) {\r\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\r\n\t\t\t\t}\r\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Scrolls the given slide element into view.\r\n\t *\r\n\t * @param {HTMLElement} slideElement\r\n\t */\r\n\tscrollToSlide( slideElement ) {\r\n\r\n\t\t// If the scroll view isn't active yet, queue this action\r\n\t\tif( !this.active ) {\r\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Find the trigger for this slide\r\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\r\n\r\n\t\t\tif( trigger ) {\r\n\t\t\t\t// Use the trigger's range to calculate the scroll position\r\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Persists the current scroll position to session storage\r\n\t * so that it can be restored.\r\n\t */\r\n\tstoreScrollPosition() {\r\n\r\n\t\tclearTimeout( this.storeScrollPositionTimeout );\r\n\r\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\r\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\r\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\r\n\r\n\t\t\tthis.storeScrollPositionTimeout = null;\r\n\t\t}, 50 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the scroll position when a deck is reloader.\r\n\t */\r\n\trestoreScrollPosition() {\r\n\r\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\r\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\r\n\r\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\r\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the given page and starts its embedded content\r\n\t * if there is any.\r\n\t *\r\n\t * @param {object} page\r\n\t */\r\n\tactivatePage( page ) {\r\n\r\n\t\tif( !page.active ) {\r\n\r\n\t\t\tpage.active = true;\r\n\r\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\r\n\r\n\t\t\tcontentElement.style.display = 'block';\r\n\r\n\t\t\tslideElement.classList.add( 'present' );\r\n\r\n\t\t\tif( backgroundElement ) {\r\n\t\t\t\tbackgroundElement.classList.add( 'present' );\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\r\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\r\n\r\n\t\t\t// If this page is part of an auto-animation there will be one\r\n\t\t\t// content element per auto-animated page. We need to show the\r\n\t\t\t// current page and hide all others.\r\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\r\n\t\t\t\tif( sibling !== contentElement ) {\r\n\t\t\t\t\tsibling.style.display = 'none';\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Deactivates the page after it has been visible.\r\n\t *\r\n\t * @param {object} page\r\n\t */\r\n\tdeactivatePage( page ) {\r\n\r\n\t\tif( page.active ) {\r\n\r\n\t\t\tpage.active = false;\r\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\r\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tactivateTrigger( trigger ) {\r\n\r\n\t\tif( !trigger.active ) {\r\n\t\t\ttrigger.active = true;\r\n\t\t\ttrigger.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdeactivateTrigger( trigger ) {\r\n\r\n\t\tif( trigger.active ) {\r\n\t\t\ttrigger.active = false;\r\n\r\n\t\t\tif( trigger.deactivate ) {\r\n\t\t\t\ttrigger.deactivate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\r\n\t * slide had before being linearized).\r\n\t *\r\n\t * @param {number} h\r\n\t * @param {number} v\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetSlideByIndices( h, v ) {\r\n\r\n\t\tconst page = this.getAllPages().find( page => {\r\n\t\t\treturn page.indexh === h && page.indexv === v;\r\n\t\t} );\r\n\r\n\t\treturn page ? page.slideElement : null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve a list of all scroll triggers for the given slide\r\n\t * DOM element.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @returns {Array}\r\n\t */\r\n\tgetScrollTriggerBySlide( slide ) {\r\n\r\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get a list of all pages in the scroll view. This includes\r\n\t * both top-level slides and auto-animate steps.\r\n\t *\r\n\t * @returns {Array}\r\n\t */\r\n\tgetAllPages() {\r\n\r\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\r\n\r\n\t}\r\n\r\n\tonScroll() {\r\n\r\n\t\tthis.syncScrollPosition();\r\n\t\tthis.storeScrollPosition();\r\n\r\n\t}\r\n\r\n\tget viewportElement() {\r\n\r\n\t\treturn this.Reveal.getViewportElement();\r\n\r\n\t}\r\n\r\n}\r\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { queryAll, createStyleSheet } from '../utils/util.js'\r\n\r\n/**\r\n * Setups up our presentation for printing/exporting to PDF.\r\n */\r\nexport default class PrintView {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the presentation for printing to a static\r\n\t * PDF.\r\n\t */\r\n\tasync activate() {\r\n\r\n\t\tconst config = this.Reveal.getConfig();\r\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\r\n\r\n\t\t// Compute slide numbers now, before we start duplicating slides\r\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\r\n\r\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\r\n\r\n\t\t// Dimensions of the PDF pages\r\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\r\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\r\n\r\n\t\t// Dimensions of slides within the pages\r\n\t\tconst slideWidth = slideSize.width,\r\n\t\t\tslideHeight = slideSize.height;\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\t// Let the browser know what page size we want to print\r\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\r\n\r\n\t\t// Limit the size of certain elements to the dimensions of the slide\r\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\r\n\r\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\r\n\t\tdocument.body.style.width = pageWidth + 'px';\r\n\t\tdocument.body.style.height = pageHeight + 'px';\r\n\r\n\t\tconst viewportElement = this.Reveal.getViewportElement();\r\n\t\tlet presentationBackground;\r\n\t\tif( viewportElement ) {\r\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\r\n\t\t\tif( viewportStyles && viewportStyles.background ) {\r\n\t\t\t\tpresentationBackground = viewportStyles.background;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Make sure stretch elements fit on slide\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\r\n\r\n\t\t// Batch scrollHeight access to prevent layout thrashing\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\r\n\r\n\t\tconst pages = [];\r\n\t\tconst pageContainer = slides[0].parentNode;\r\n\t\tlet slideNumber = 1;\r\n\r\n\t\t// Slide and slide background layout\r\n\t\tslides.forEach( function( slide, index ) {\r\n\r\n\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t// children will be\r\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\r\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\r\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\r\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\r\n\r\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\r\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\r\n\r\n\t\t\t\t// Adhere to configured pages per slide limit\r\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\r\n\r\n\t\t\t\t// Center slides vertically\r\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\r\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\r\n\t\t\t\t// so that no page ever flows onto another\r\n\t\t\t\tconst page = document.createElement( 'div' );\r\n\t\t\t\tpages.push( page );\r\n\r\n\t\t\t\tpage.className = 'pdf-page';\r\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\r\n\r\n\t\t\t\t// Copy the presentation-wide background to each individual\r\n\t\t\t\t// page when printing\r\n\t\t\t\tif( presentationBackground ) {\r\n\t\t\t\t\tpage.style.background = presentationBackground;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpage.appendChild( slide );\r\n\r\n\t\t\t\t// Position the slide inside of the page\r\n\t\t\t\tslide.style.left = left + 'px';\r\n\t\t\t\tslide.style.top = top + 'px';\r\n\t\t\t\tslide.style.width = slideWidth + 'px';\r\n\r\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\r\n\r\n\t\t\t\tif( slide.slideBackgroundElement ) {\r\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject notes if `showNotes` is enabled\r\n\t\t\t\tif( config.showNotes ) {\r\n\r\n\t\t\t\t\t// Are there notes for this slide?\r\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\r\n\t\t\t\t\tif( notes ) {\r\n\r\n\t\t\t\t\t\tconst notesSpacing = 8;\r\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\r\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\r\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\r\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\r\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\r\n\r\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\r\n\t\t\t\t\t\t\tpages.push( notesElement );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\r\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\r\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\r\n\t\t\t\tif( injectPageNumbers ) {\r\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\r\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\r\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\r\n\t\t\t\t\tpage.appendChild( numberElement );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Copy page and show fragments one after another\r\n\t\t\t\tif( config.pdfSeparateFragments ) {\r\n\r\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\r\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\r\n\t\t\t\t\t// are part of the same group.\r\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\r\n\r\n\t\t\t\t\tlet previousFragmentStep;\r\n\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\r\n\r\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\r\n\t\t\t\t\t\tif( previousFragmentStep ) {\r\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Show the fragments for the current index\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t\t// Create a separate page for the current fragment state\r\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\r\n\r\n\t\t\t\t\t\t// Inject unique page numbers for fragments\r\n\t\t\t\t\t\tif( injectPageNumbers ) {\r\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\r\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\r\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpages.push( clonedPage );\r\n\r\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\r\n\r\n\t\t\t\t\t}, this );\r\n\r\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\r\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\r\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\r\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// Show all fragments\r\n\t\t\t\telse {\r\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\r\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}, this );\r\n\r\n\t\tawait new Promise( requestAnimationFrame );\r\n\r\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\r\n\r\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\r\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\r\n\r\n\t\t// Notify subscribers that the PDF layout is good to go\r\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\r\n\r\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the print mode is/should be activated.\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.Reveal.getConfig().view === 'print';\r\n\r\n\t}\r\n\r\n}","import { extend, queryAll } from '../utils/util.js'\r\n\r\n/**\r\n * Handles sorting and navigation of slide fragments.\r\n * Fragments are elements within a slide that are\r\n * revealed/animated incrementally.\r\n */\r\nexport default class Fragments {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.fragments === false ) {\r\n\t\t\tthis.disable();\r\n\t\t}\r\n\t\telse if( oldConfig.fragments === false ) {\r\n\t\t\tthis.enable();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * If fragments are disabled in the deck, they should all be\r\n\t * visible rather than stepped through.\r\n\t */\r\n\tdisable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.add( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reverse of #disable(). Only called if fragments have\r\n\t * previously been disabled.\r\n\t */\r\n\tenable() {\r\n\r\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\r\n\t\t\telement.classList.remove( 'visible' );\r\n\t\t\telement.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object describing the available fragment\r\n\t * directions.\r\n\t *\r\n\t * @return {{prev: boolean, next: boolean}}\r\n\t */\r\n\tavailableRoutes() {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\r\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\r\n\t\t\t\tnext: !!hiddenFragments.length\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn { prev: false, next: false };\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a sorted fragments list, ordered by an increasing\r\n\t * \"data-fragment-index\" attribute.\r\n\t *\r\n\t * Fragments will be revealed in the order that they are returned by\r\n\t * this function, so you can use the index attributes to control the\r\n\t * order of fragment appearance.\r\n\t *\r\n\t * To maintain a sensible default fragment order, fragments are presumed\r\n\t * to be passed in document order. This function adds a \"fragment-index\"\r\n\t * attribute to each node if such an attribute is not already present,\r\n\t * and sets that attribute to an integer value which is the position of\r\n\t * the fragment within the fragments list.\r\n\t *\r\n\t * @param {object[]|*} fragments\r\n\t * @param {boolean} grouped If true the returned array will contain\r\n\t * nested arrays for all fragments with the same index\r\n\t * @return {object[]} sorted Sorted array of fragments\r\n\t */\r\n\tsort( fragments, grouped = false ) {\r\n\r\n\t\tfragments = Array.from( fragments );\r\n\r\n\t\tlet ordered = [],\r\n\t\t\tunordered = [],\r\n\t\t\tsorted = [];\r\n\r\n\t\t// Group ordered and unordered elements\r\n\t\tfragments.forEach( fragment => {\r\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\r\n\t\t\t\tif( !ordered[index] ) {\r\n\t\t\t\t\tordered[index] = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tordered[index].push( fragment );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tunordered.push( [ fragment ] );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Append fragments without explicit indices in their\r\n\t\t// DOM order\r\n\t\tordered = ordered.concat( unordered );\r\n\r\n\t\t// Manually count the index up per group to ensure there\r\n\t\t// are no gaps\r\n\t\tlet index = 0;\r\n\r\n\t\t// Push all fragments in their sorted order to an array,\r\n\t\t// this flattens the groups\r\n\t\tordered.forEach( group => {\r\n\t\t\tgroup.forEach( fragment => {\r\n\t\t\t\tsorted.push( fragment );\r\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\r\n\t\t\t} );\r\n\r\n\t\t\tindex ++;\r\n\t\t} );\r\n\r\n\t\treturn grouped === true ? ordered : sorted;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sorts and formats all of fragments in the\r\n\t * presentation.\r\n\t */\r\n\tsortAll() {\r\n\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\r\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\t}, this );\r\n\r\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Refreshes the fragments on the current slide so that they\r\n\t * have the appropriate classes (.visible + .current-fragment).\r\n\t *\r\n\t * @param {number} [index] The index of the current fragment\r\n\t * @param {array} [fragments] Array containing all fragments\r\n\t * in the current slide\r\n\t *\r\n\t * @return {{shown: array, hidden: array}}\r\n\t */\r\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\tlet changedFragments = {\r\n\t\t\tshown: [],\r\n\t\t\thidden: []\r\n\t\t};\r\n\r\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\tlet maxIndex = 0;\r\n\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\r\n\t\t\t\t\tif( currentFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\r\n\r\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\r\n\r\n\t\t\t\t\t// Visible fragments\r\n\t\t\t\t\tif( i <= index ) {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.add( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( i === index ) {\r\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\r\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\r\n\r\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( !wasVisible ) {\r\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Hidden fragments\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\r\n\t\t\t\t\t\tel.classList.remove( 'visible' );\r\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\r\n\r\n\t\t\t\t\t\tif( wasVisible ) {\r\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\r\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\r\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\t\t\ttarget: el,\r\n\t\t\t\t\t\t\t\ttype: 'hidden',\r\n\t\t\t\t\t\t\t\tbubbles: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\t// Write the current fragment index to the slide <section>.\r\n\t\t\t\t// This can be used by end users to apply styles based on\r\n\t\t\t\t// the current fragment index.\r\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\r\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\r\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn changedFragments;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the fragments on the given slide so that they have\r\n\t * valid indices. Call this if fragments are changed in the DOM\r\n\t * after reveal.js has already initialized.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t * @return {Array} a list of the HTML fragments that were synced\r\n\t */\r\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the specified slide fragment.\r\n\t *\r\n\t * @param {?number} index The index of the fragment that\r\n\t * should be shown, -1 means all are invisible\r\n\t * @param {number} offset Integer offset to apply to the\r\n\t * fragment index\r\n\t *\r\n\t * @return {boolean} true if a change was made in any\r\n\t * fragments visibility as part of this call\r\n\t */\r\n\tgoto( index, offset = 0 ) {\r\n\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\r\n\r\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\r\n\t\t\tif( fragments.length ) {\r\n\r\n\t\t\t\t// If no index is specified, find the current\r\n\t\t\t\tif( typeof index !== 'number' ) {\r\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\r\n\r\n\t\t\t\t\tif( lastVisibleFragment ) {\r\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tindex = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply the offset if there is one\r\n\t\t\t\tindex += offset;\r\n\r\n\t\t\t\tlet changedFragments = this.update( index, fragments );\r\n\r\n\t\t\t\tif( changedFragments.hidden.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmenthidden',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( changedFragments.shown.length ) {\r\n\t\t\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\t\t\ttype: 'fragmentshown',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\r\n\t\t\t\t\t\t\tfragments: changedFragments.shown\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.Reveal.controls.update();\r\n\t\t\t\tthis.Reveal.progress.update();\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\t\t\tthis.Reveal.location.writeURL();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the next slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a next fragment,\r\n\t * false otherwise\r\n\t */\r\n\tnext() {\r\n\r\n\t\treturn this.goto( null, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigate to the previous slide fragment.\r\n\t *\r\n\t * @return {boolean} true if there was a previous fragment,\r\n\t * false otherwise\r\n\t */\r\n\tprev() {\r\n\r\n\t\treturn this.goto( null, -1 );\r\n\r\n\t}\r\n\r\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\r\nimport { extend, queryAll, transformElement } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all logic related to the overview mode\r\n * (birds-eye view of all slides).\r\n */\r\nexport default class Overview {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.active = false;\r\n\r\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Displays the overview of slides (quick nav) by scaling\r\n\t * down and arranging all slide elements.\r\n\t */\r\n\tactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\r\n\r\n\t\t\tthis.active = true;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\r\n\r\n\t\t\t// Don't auto-slide while in overview mode\r\n\t\t\tthis.Reveal.cancelAutoSlide();\r\n\r\n\t\t\t// Move the backgrounds element into the slide container to\r\n\t\t\t// that the same scaling is applied\r\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clicking on an overview slide navigates to it\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\t// Calculate slide sizes\r\n\t\t\tconst margin = 70;\r\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\r\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\r\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\r\n\r\n\t\t\t// Reverse in RTL mode\r\n\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis.Reveal.updateSlidesVisibility();\r\n\r\n\t\t\tthis.layout();\r\n\t\t\tthis.update();\r\n\r\n\t\t\tthis.Reveal.layout();\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Notify observers of the overview showing\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewshown',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uses CSS transforms to position all slides in a grid for\r\n\t * display inside of the overview mode.\r\n\t */\r\n\tlayout() {\r\n\r\n\t\t// Layout slides\r\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\r\n\t\t\thslide.setAttribute( 'data-index-h', h );\r\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\r\n\r\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\r\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\r\n\r\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\t// Layout slide backgrounds\r\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\r\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\r\n\r\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\r\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Moves the overview viewport to the current slides.\r\n\t * Called each time the current slide changes.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\r\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\r\n\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\tthis.Reveal.transformSlides( {\r\n\t\t\toverview: [\r\n\t\t\t\t'scale('+ scale +')',\r\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\r\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\r\n\t\t\t].join( ' ' )\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits the slide overview and enters the currently\r\n\t * active slide.\r\n\t */\r\n\tdeactivate() {\r\n\r\n\t\t// Only proceed if enabled in config\r\n\t\tif( this.Reveal.getConfig().overview ) {\r\n\r\n\t\t\tthis.active = false;\r\n\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\r\n\r\n\t\t\t// Temporarily add a class so that transitions can do different things\r\n\t\t\t// depending on whether they are exiting/entering overview, or just\r\n\t\t\t// moving from slide to slide\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\r\n\t\t\t}, 1 );\r\n\r\n\t\t\t// Move the background element back out\r\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\r\n\r\n\t\t\t// Clean up changes made to slides\r\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\r\n\t\t\t\ttransformElement( slide, '' );\r\n\r\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\r\n\t\t\t} );\r\n\r\n\t\t\t// Clean up changes made to backgrounds\r\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\r\n\t\t\t\ttransformElement( background, '' );\r\n\t\t\t} );\r\n\r\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\r\n\r\n\t\t\tconst indices = this.Reveal.getIndices();\r\n\r\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\r\n\t\t\tthis.Reveal.layout();\r\n\t\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t\t\t// Notify observers of the overview hiding\r\n\t\t\tthis.Reveal.dispatchEvent({\r\n\t\t\t\ttype: 'overviewhidden',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\t'indexh': indices.h,\r\n\t\t\t\t\t'indexv': indices.v,\r\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the slide overview mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * overview is open, false means it's closed.\r\n\t */\r\n\ttoggle( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? this.activate() : this.deactivate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the overview is currently active.\r\n\t *\r\n\t * @return {Boolean} true if the overview is active,\r\n\t * false otherwise\r\n\t */\r\n\tisActive() {\r\n\r\n\t\treturn this.active;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Invoked when a slide is and we're in the overview.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonSlideClicked( event ) {\r\n\r\n\t\tif( this.isActive() ) {\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tlet element = event.target;\r\n\r\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\telement = element.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\r\n\r\n\t\t\t\tthis.deactivate();\r\n\r\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\r\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\r\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\r\n\r\n\t\t\t\t\tthis.Reveal.slide( h, v );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { enterFullscreen } from '../utils/util.js'\r\n\r\n/**\r\n * Handles all reveal.js keyboard interactions.\r\n */\r\nexport default class Keyboard {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// A key:value map of keyboard keys and descriptions of\r\n\t\t// the actions they trigger\r\n\t\tthis.shortcuts = {};\r\n\r\n\t\t// Holds custom key code mappings\r\n\t\tthis.bindings = {};\r\n\r\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\r\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\r\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\r\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\r\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\r\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\r\n\t\t}\r\n\r\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\r\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\r\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\r\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\r\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\r\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts listening for keyboard events.\r\n\t */\r\n\tbind() {\r\n\r\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stops listening for keyboard events.\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Add a custom key binding with optional description to\r\n\t * be added to the help screen.\r\n\t */\r\n\taddKeyBinding( binding, callback ) {\r\n\r\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\r\n\t\t\tthis.bindings[binding.keyCode] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: binding.key,\r\n\t\t\t\tdescription: binding.description\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.bindings[binding] = {\r\n\t\t\t\tcallback: callback,\r\n\t\t\t\tkey: null,\r\n\t\t\t\tdescription: null\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified custom key binding.\r\n\t */\r\n\tremoveKeyBinding( keyCode ) {\r\n\r\n\t\tdelete this.bindings[keyCode];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Programmatically triggers a keyboard event\r\n\t *\r\n\t * @param {int} keyCode\r\n\t */\r\n\ttriggerKey( keyCode ) {\r\n\r\n\t\tthis.onDocumentKeyDown( { keyCode } );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new shortcut to include in the help overlay\r\n\t *\r\n\t * @param {String} key\r\n\t * @param {String} value\r\n\t */\r\n\tregisterKeyboardShortcut( key, value ) {\r\n\r\n\t\tthis.shortcuts[key] = value;\r\n\r\n\t}\r\n\r\n\tgetShortcuts() {\r\n\r\n\t\treturn this.shortcuts;\r\n\r\n\t}\r\n\r\n\tgetBindings() {\r\n\r\n\t\treturn this.bindings;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'keydown' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentKeyDown( event ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// If there's a condition specified and it returns false,\r\n\t\t// ignore this event\r\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// If keyboardCondition is set, only capture keyboard events\r\n\t\t// for embedded decks when they are focused\r\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Shorthand\r\n\t\tlet keyCode = event.keyCode;\r\n\r\n\t\t// Remember if auto-sliding was paused so we can toggle it\r\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t// Is there a focused element that could be using the keyboard?\r\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\r\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\r\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\r\n\r\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\r\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 78, 80, 191].indexOf( event.keyCode ) !== -1;\r\n\r\n\t\t// Prevent all other events when a modifier is pressed\r\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\r\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\r\n\r\n\t\t// Disregard the event if there's a focused element or a\r\n\t\t// keyboard modifier key is present\r\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\r\n\r\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\r\n\t\tlet resumeKeyCodes = [66,86,190,191];\r\n\t\tlet key;\r\n\r\n\t\t// Custom key bindings for togglePause should be able to resume\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\t\t\tfor( key in config.keyboard ) {\r\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\r\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Use linear navigation if we're configured to OR if\r\n\t\t// the presentation is one-dimensional\r\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\r\n\r\n\t\tlet triggered = false;\r\n\r\n\t\t// 1. User defined key bindings\r\n\t\tif( typeof config.keyboard === 'object' ) {\r\n\r\n\t\t\tfor( key in config.keyboard ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet value = config.keyboard[ key ];\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof value === 'function' ) {\r\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ value ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 2. Registered custom key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\tfor( key in this.bindings ) {\r\n\r\n\t\t\t\t// Check if this binding matches the pressed key\r\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\r\n\r\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\r\n\r\n\t\t\t\t\t// Callback function\r\n\t\t\t\t\tif( typeof action === 'function' ) {\r\n\t\t\t\t\t\taction.apply( null, [ event ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// String shortcuts to reveal.js API\r\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\r\n\t\t\t\t\t\tthis.Reveal[ action ].call();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttriggered = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 3. System defined key bindings\r\n\t\tif( triggered === false ) {\r\n\r\n\t\t\t// Assume true and try to prove false\r\n\t\t\ttriggered = true;\r\n\r\n\t\t\t// P, PAGE UP\r\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\r\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// N, PAGE DOWN\r\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\r\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t}\r\n\t\t\t// H, LEFT\r\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// L, RIGHT\r\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// K, UP\r\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// J, DOWN\r\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\r\n\t\t\t\t}\r\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// HOME\r\n\t\t\telse if( keyCode === 36 ) {\r\n\t\t\t\tthis.Reveal.slide( 0 );\r\n\t\t\t}\r\n\t\t\t// END\r\n\t\t\telse if( keyCode === 35 ) {\r\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\r\n\t\t\t}\r\n\t\t\t// SPACE\r\n\t\t\telse if( keyCode === 32 ) {\r\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\r\n\t\t\t\t\tthis.Reveal.overview.deactivate();\r\n\t\t\t\t}\r\n\t\t\t\tif( event.shiftKey ) {\r\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\r\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\r\n\t\t\t\tthis.Reveal.togglePause();\r\n\t\t\t}\r\n\t\t\t// F\r\n\t\t\telse if( keyCode === 70 ) {\r\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\r\n\t\t\t}\r\n\t\t\t// A\r\n\t\t\telse if( keyCode === 65 ) {\r\n\t\t\t\tif( config.autoSlideStoppable ) {\r\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// G\r\n\t\t\telse if( keyCode === 71 ) {\r\n\t\t\t\tif( config.jumpToSlide ) {\r\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ?\r\n\t\t\telse if( keyCode === 191 && event.shiftKey ) {\r\n\t\t\t\tthis.Reveal.toggleHelp();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttriggered = false;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the input resulted in a triggered action we should prevent\r\n\t\t// the browsers default behavior\r\n\t\tif( triggered ) {\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\t\t// ESC or O key\r\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\r\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\r\n\t\t\t\tthis.Reveal.overview.toggle();\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault && event.preventDefault();\r\n\t\t}\r\n\r\n\t\t// If auto-sliding is enabled we need to cue up\r\n\t\t// another timeout\r\n\t\tthis.Reveal.cueAutoSlide();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Reads and writes the URL based on reveal.js' current state.\r\n */\r\nexport default class Location {\r\n\r\n\t// The minimum number of milliseconds that must pass between\r\n\t// calls to history.replaceState\r\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\r\n\t\tthis.writeURLTimeout = 0;\r\n\r\n\t\tthis.replaceStateTimestamp = 0;\r\n\r\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide indices for the given hash link.\r\n\t *\r\n\t * @param {string} [hash] the hash string that we want to\r\n\t * find the indices for\r\n\t *\r\n\t * @returns slide indices or null\r\n\t */\r\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\r\n\r\n\t\t// Attempt to parse the hash as either an index or name\r\n\t\tlet name = hash.replace( /^#\\/?/, '' );\r\n\t\tlet bits = name.split( '/' );\r\n\r\n\t\t// If the first bit is not fully numeric and there is a name we\r\n\t\t// can assume that this is a named link\r\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\r\n\t\t\tlet slide;\r\n\r\n\t\t\tlet f;\r\n\r\n\t\t\t// Parse named links with fragments (#/named-link/2)\r\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\r\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\r\n\t\t\t\tf = isNaN(f) ? undefined : f;\r\n\t\t\t\tname = name.split( '/' ).shift();\r\n\t\t\t}\r\n\r\n\t\t\t// Ensure the named link is a valid HTML ID attribute\r\n\t\t\ttry {\r\n\t\t\t\tslide = document\r\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\r\n\t\t\t\t\t.closest('.slides section');\r\n\t\t\t}\r\n\t\t\tcatch ( error ) { }\r\n\r\n\t\t\tif( slide ) {\r\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst config = this.Reveal.getConfig();\r\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\r\n\r\n\t\t\t// Read the index components of the hash\r\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\r\n\t\t\t\tf;\r\n\r\n\t\t\tif( config.fragmentInURL ) {\r\n\t\t\t\tf = parseInt( bits[2], 10 );\r\n\t\t\t\tif( isNaN( f ) ) {\r\n\t\t\t\t\tf = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn { h, v, f };\r\n\t\t}\r\n\r\n\t\t// The hash couldn't be parsed or no matching named link was found\r\n\t\treturn null\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reads the current URL (hash) and navigates accordingly.\r\n\t */\r\n\treadURL() {\r\n\r\n\t\tconst currentIndices = this.Reveal.getIndices();\r\n\t\tconst newIndices = this.getIndicesFromHash();\r\n\r\n\t\tif( newIndices ) {\r\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\r\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// If no new indices are available, we're trying to navigate to\r\n\t\t// a slide hash that does not exist\r\n\t\telse {\r\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the page URL (hash) to reflect the current\r\n\t * state.\r\n\t *\r\n\t * @param {number} delay The time in ms to wait before\r\n\t * writing the hash\r\n\t */\r\n\twriteURL( delay ) {\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\r\n\t\t// Make sure there's never more than one timeout running\r\n\t\tclearTimeout( this.writeURLTimeout );\r\n\r\n\t\t// If a delay is specified, timeout this call\r\n\t\tif( typeof delay === 'number' ) {\r\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\r\n\t\t}\r\n\t\telse if( currentSlide ) {\r\n\r\n\t\t\tlet hash = this.getHash();\r\n\r\n\t\t\t// If we're configured to push to history OR the history\r\n\t\t\t// API is not available.\r\n\t\t\tif( config.history ) {\r\n\t\t\t\twindow.location.hash = hash;\r\n\t\t\t}\r\n\t\t\t// If we're configured to reflect the current slide in the\r\n\t\t\t// URL without pushing to history.\r\n\t\t\telse if( config.hash ) {\r\n\t\t\t\t// If the hash is empty, don't add it to the URL\r\n\t\t\t\tif( hash === '/' ) {\r\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\r\n\t\t\t// anchors on pages where reveal.js is running. Removed\r\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\r\n\t\t\t//\r\n\t\t\t// If history and hash are both disabled, a hash may still\r\n\t\t\t// be added to the URL by clicking on a href with a hash\r\n\t\t\t// target. Counter this by always removing the hash.\r\n\t\t\t// else {\r\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\r\n\t\t\t// }\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treplaceState( url ) {\r\n\r\n\t\twindow.history.replaceState( null, null, url );\r\n\t\tthis.replaceStateTimestamp = Date.now();\r\n\r\n\t}\r\n\r\n\tdebouncedReplaceState( url ) {\r\n\r\n\t\tclearTimeout( this.replaceStateTimeout );\r\n\r\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\r\n\t\t\tthis.replaceState( url );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Return a hash URL that will resolve to the given slide location.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\r\n\t */\r\n\tgetHash( slide ) {\r\n\r\n\t\tlet url = '/';\r\n\r\n\t\t// Attempt to create a named link based on the slide's ID\r\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\r\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\r\n\t\tif( id ) {\r\n\t\t\tid = encodeURIComponent( id );\r\n\t\t}\r\n\r\n\t\tlet index = this.Reveal.getIndices( slide );\r\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\r\n\t\t\tindex.f = undefined;\r\n\t\t}\r\n\r\n\t\t// If the current slide has an ID, use that as a named link,\r\n\t\t// but we don't support named links with a fragment index\r\n\t\tif( typeof id === 'string' && id.length ) {\r\n\t\t\turl = '/' + id;\r\n\r\n\t\t\t// If there is also a fragment, append that at the end\r\n\t\t\t// of the named link, like: #/named-link/2\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\t\t// Otherwise use the /h/v index\r\n\t\telse {\r\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\r\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\r\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\r\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'hashchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tonWindowHashChange( event ) {\r\n\r\n\t\tthis.readURL();\r\n\r\n\t}\r\n\r\n}","import { queryAll } from '../utils/util.js'\r\nimport { isAndroid } from '../utils/device.js'\r\n\r\n/**\r\n * Manages our presentation controls. This includes both\r\n * the built-in control arrows as well as event monitoring\r\n * of any elements within the presentation with either of the\r\n * following helper classes:\r\n * - .navigate-up\r\n * - .navigate-right\r\n * - .navigate-down\r\n * - .navigate-left\r\n * - .navigate-next\r\n * - .navigate-prev\r\n */\r\nexport default class Controls {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\r\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\r\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\r\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\r\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\r\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst rtl = this.Reveal.getConfig().rtl;\r\n\t\tconst revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tthis.element = document.createElement( 'aside' );\r\n\t\tthis.element.className = 'controls';\r\n\t\tthis.element.innerHTML =\r\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\r\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\r\n\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\t// There can be multiple instances of controls throughout the page\r\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\r\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\r\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\r\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\r\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\r\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\r\n\r\n\t\t// The left, right and down arrows in the standard reveal.js controls\r\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\r\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\r\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\r\n\r\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\r\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\t// Listen to both touch and click events, in case the device\r\n\t\t// supports both\r\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\r\n\r\n\t\t// Only support touch for Android, fixes double navigations in\r\n\t\t// stock browser\r\n\t\tif( isAndroid ) {\r\n\t\t\tpointerEvents = [ 'touchstart' ];\r\n\t\t}\r\n\r\n\t\tpointerEvents.forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\r\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\r\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\r\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\r\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\r\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\r\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the state of all control/navigation arrows.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tlet routes = this.Reveal.availableRoutes();\r\n\r\n\t\t// Remove the 'enabled' class from all directions\r\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\r\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\r\n\r\n\t\t\t// Set 'disabled' attribute on all directions\r\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\r\n\t\t} );\r\n\r\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\r\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Prev/next buttons\r\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t// Highlight fragment directions\r\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\r\n\r\n\t\t\t// Always apply fragment decorator to prev/next buttons\r\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\r\n\t\t\t// Apply fragment decorators to directional buttons based on\r\n\t\t\t// what slide axis they are in\r\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\r\n\r\n\t\t\tlet indices = this.Reveal.getIndices();\r\n\r\n\t\t\t// Highlight control arrows with an animation to ensure\r\n\t\t\t// that the viewer knows how to navigate\r\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\r\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\r\n\r\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.unbind();\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event handlers for navigation control buttons.\r\n\t */\r\n\tonNavigateLeftClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.prev();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.left();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateRightClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\r\n\t\t\tthis.Reveal.next();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.right();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tonNavigateUpClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.up();\r\n\r\n\t}\r\n\r\n\tonNavigateDownClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.down();\r\n\r\n\t}\r\n\r\n\tonNavigatePrevClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.prev();\r\n\r\n\t}\r\n\r\n\tonNavigateNextClicked( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\t\tthis.Reveal.onUserInput();\r\n\r\n\t\tthis.Reveal.next();\r\n\r\n\t}\r\n\r\n\r\n}","/**\r\n * Creates a visual progress bar for the presentation.\r\n */\r\nexport default class Progress {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'progress';\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t\tthis.bar = document.createElement( 'span' );\r\n\t\tthis.element.appendChild( this.bar );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\r\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the progress bar to reflect the current slide.\r\n\t */\r\n\tupdate() {\r\n\r\n\t\t// Update progress if enabled\r\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\r\n\r\n\t\t\tlet scale = this.Reveal.getProgress();\r\n\r\n\t\t\t// Don't fill the progress bar if there's only one slide\r\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\r\n\t\t\t\tscale = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMaxWidth() {\r\n\r\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Clicking on the progress bar results in a navigation to the\r\n\t * closest approximate horizontal slide using this equation:\r\n\t *\r\n\t * ( clickX / presentationWidth ) * numberOfSlides\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonProgressClicked( event ) {\r\n\r\n\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet slides = this.Reveal.getSlides();\r\n\t\tlet slidesTotal = slides.length;\r\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\r\n\r\n\t\tif( this.Reveal.getConfig().rtl ) {\r\n\t\t\tslideIndex = slidesTotal - slideIndex;\r\n\t\t}\r\n\r\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\r\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles hiding of the pointer/cursor when inactive.\r\n */\r\nexport default class Pointer {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Throttles mouse wheel navigation\r\n\t\tthis.lastMouseWheelStep = 0;\r\n\r\n\t\t// Is the mouse pointer currently hidden from view\r\n\t\tthis.cursorHidden = false;\r\n\r\n\t\t// Timeout used to determine when the cursor is inactive\r\n\t\tthis.cursorInactiveTimeout = 0;\r\n\r\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\r\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.mouseWheel ) {\r\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\r\n\t\t}\r\n\r\n\t\t// Auto-hide the mouse pointer when its inactive\r\n\t\tif( config.hideInactiveCursor ) {\r\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.showCursor();\r\n\r\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the mouse pointer after it has been hidden with\r\n\t * #hideCursor.\r\n\t */\r\n\tshowCursor() {\r\n\r\n\t\tif( this.cursorHidden ) {\r\n\t\t\tthis.cursorHidden = false;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides the mouse pointer when it's on top of the .reveal\r\n\t * container.\r\n\t */\r\n\thideCursor() {\r\n\r\n\t\tif( this.cursorHidden === false ) {\r\n\t\t\tthis.cursorHidden = true;\r\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\r\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\r\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called whenever there is mouse input at the document level\r\n\t * to determine if the cursor is active or not.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentCursorActive( event ) {\r\n\r\n\t\tthis.showCursor();\r\n\r\n\t\tclearTimeout( this.cursorInactiveTimeout );\r\n\r\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\r\n\t * multiple slides.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonDocumentMouseScroll( event ) {\r\n\r\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\r\n\r\n\t\t\tthis.lastMouseWheelStep = Date.now();\r\n\r\n\t\t\tlet delta = event.detail || -event.wheelDelta;\r\n\t\t\tif( delta > 0 ) {\r\n\t\t\t\tthis.Reveal.next();\r\n\t\t\t}\r\n\t\t\telse if( delta < 0 ) {\r\n\t\t\t\tthis.Reveal.prev();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","/**\r\n * Loads a JavaScript file from the given URL and executes it.\r\n *\r\n * @param {string} url Address of the .js file to load\r\n * @param {function} callback Method to invoke when the script\r\n * has loaded and executed\r\n */\r\nexport const loadScript = ( url, callback ) => {\r\n\r\n\tconst script = document.createElement( 'script' );\r\n\tscript.type = 'text/javascript';\r\n\tscript.async = false;\r\n\tscript.defer = false;\r\n\tscript.src = url;\r\n\r\n\tif( typeof callback === 'function' ) {\r\n\r\n\t\t// Success callback\r\n\t\tscript.onload = script.onreadystatechange = event => {\r\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\r\n\r\n\t\t\t\t// Kill event listeners\r\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\t\tcallback();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Error callback\r\n\t\tscript.onerror = err => {\r\n\r\n\t\t\t// Kill event listeners\r\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\r\n\r\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Append the script at the end of <head>\r\n\tconst head = document.querySelector( 'head' );\r\n\thead.insertBefore( script, head.lastChild );\r\n\r\n}","import { loadScript } from '../utils/loader.js'\r\n\r\n/**\r\n * Manages loading and registering of reveal.js plugins.\r\n */\r\nexport default class Plugins {\r\n\r\n\tconstructor( reveal ) {\r\n\r\n\t\tthis.Reveal = reveal;\r\n\r\n\t\t// Flags our current state (idle -> loading -> loaded)\r\n\t\tthis.state = 'idle';\r\n\r\n\t\t// An id:instance map of currently registered plugins\r\n\t\tthis.registeredPlugins = {};\r\n\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads reveal.js dependencies, registers and\r\n\t * initializes plugins.\r\n\t *\r\n\t * Plugins are direct references to a reveal.js plugin\r\n\t * object that we register and initialize after any\r\n\t * synchronous dependencies have loaded.\r\n\t *\r\n\t * Dependencies are defined via the 'dependencies' config\r\n\t * option and will be loaded prior to starting reveal.js.\r\n\t * Some dependencies may have an 'async' flag, if so they\r\n\t * will load after reveal.js has been started up.\r\n\t */\r\n\tload( plugins, dependencies ) {\r\n\r\n\t\tthis.state = 'loading';\r\n\r\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet scripts = [],\r\n\t\t\t\tscriptsToLoad = 0;\r\n\r\n\t\t\tdependencies.forEach( s => {\r\n\t\t\t\t// Load if there's no condition or the condition is truthy\r\n\t\t\t\tif( !s.condition || s.condition() ) {\r\n\t\t\t\t\tif( s.async ) {\r\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tscripts.push( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t\tif( scripts.length ) {\r\n\t\t\t\tscriptsToLoad = scripts.length;\r\n\r\n\t\t\t\tconst scriptLoadedCallback = (s) => {\r\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\r\n\r\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\r\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Load synchronous scripts\r\n\t\t\t\tscripts.forEach( s => {\r\n\t\t\t\t\tif( typeof s.id === 'string' ) {\r\n\t\t\t\t\t\tthis.registerPlugin( s );\r\n\t\t\t\t\t\tscriptLoadedCallback( s );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\r\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\r\n\t\t\t\t\t\tscriptLoadedCallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.initPlugins().then( resolve );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes our plugins and waits for them to be ready\r\n\t * before proceeding.\r\n\t */\r\n\tinitPlugins() {\r\n\r\n\t\treturn new Promise( resolve => {\r\n\r\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\r\n\t\t\tlet pluginsToInitialize = pluginValues.length;\r\n\r\n\t\t\t// If there are no plugins, skip this step\r\n\t\t\tif( pluginsToInitialize === 0 ) {\r\n\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t}\r\n\t\t\t// ... otherwise initialize plugins\r\n\t\t\telse {\r\n\r\n\t\t\t\tlet initNextPlugin;\r\n\r\n\t\t\t\tlet afterPlugInitialized = () => {\r\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\r\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinitNextPlugin();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\t// Initialize plugins serially\r\n\t\t\t\tinitNextPlugin = () => {\r\n\r\n\t\t\t\t\tlet plugin = pluginValues[i++];\r\n\r\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\r\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\r\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\r\n\r\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\r\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\r\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tafterPlugInitialized();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinitNextPlugin();\r\n\r\n\t\t\t}\r\n\r\n\t\t} )\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Loads all async reveal.js dependencies.\r\n\t */\r\n\tloadAsync() {\r\n\r\n\t\tthis.state = 'loaded';\r\n\r\n\t\tif( this.asyncDependencies.length ) {\r\n\t\t\tthis.asyncDependencies.forEach( s => {\r\n\t\t\t\tloadScript( s.src, s.callback );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn Promise.resolve();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a new plugin with this reveal.js instance.\r\n\t *\r\n\t * reveal.js waits for all registered plugins to initialize\r\n\t * before considering itself ready, as long as the plugin\r\n\t * is registered before calling `Reveal.initialize()`.\r\n\t */\r\n\tregisterPlugin( plugin ) {\r\n\r\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\r\n\t\t// plugins work with reveal.js 4.0.0\r\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\r\n\t\t\tplugin = arguments[1];\r\n\t\t\tplugin.id = arguments[0];\r\n\t\t}\r\n\t\t// Plugin can optionally be a function which we call\r\n\t\t// to create an instance of the plugin\r\n\t\telse if( typeof plugin === 'function' ) {\r\n\t\t\tplugin = plugin();\r\n\t\t}\r\n\r\n\t\tlet id = plugin.id;\r\n\r\n\t\tif( typeof id !== 'string' ) {\r\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\r\n\t\t}\r\n\t\telse if( this.registeredPlugins[id] === undefined ) {\r\n\t\t\tthis.registeredPlugins[id] = plugin;\r\n\r\n\t\t\t// If a plugin is registered after reveal.js is loaded,\r\n\t\t\t// initialize it right away\r\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\r\n\t\t\t\tplugin.init( this.Reveal );\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if a specific plugin has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\thasPlugin( id ) {\r\n\r\n\t\treturn !!this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the specific plugin instance, if a plugin\r\n\t * with the given ID has been registered.\r\n\t *\r\n\t * @param {String} id Unique plugin identifier\r\n\t */\r\n\tgetPlugin( id ) {\r\n\r\n\t\treturn this.registeredPlugins[id];\r\n\r\n\t}\r\n\r\n\tgetRegisteredPlugins() {\r\n\r\n\t\treturn this.registeredPlugins;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\r\n\t\t\tif( typeof plugin.destroy === 'function' ) {\r\n\t\t\t\tplugin.destroy();\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.registeredPlugins = {};\r\n\t\tthis.asyncDependencies = [];\r\n\r\n\t}\r\n\r\n}\r\n","import { isAndroid } from '../utils/device.js'\r\nimport { matches } from '../utils/util.js'\r\n\r\nconst SWIPE_THRESHOLD = 40;\r\n\r\n/**\r\n * Controls all touch interactions and navigations for\r\n * a presentation.\r\n */\r\nexport default class Touch {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\t// Holds information about the currently ongoing touch interaction\r\n\t\tthis.touchStartX = 0;\r\n\t\tthis.touchStartY = 0;\r\n\t\tthis.touchStartCount = 0;\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\r\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\r\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\r\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\r\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\r\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\tif( 'onpointerdown' in window ) {\r\n\t\t\t// Use W3C pointer events\r\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse if( window.navigator.msPointerEnabled ) {\r\n\t\t\t// IE 10 uses prefixed version of pointer events\r\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Fall back to touch events\r\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tunbind() {\r\n\r\n\t\tlet revealElement = this.Reveal.getRevealElement();\r\n\r\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\r\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\r\n\r\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\r\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\r\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the target element prevents the triggering of\r\n\t * swipe navigation.\r\n\t */\r\n\tisSwipePrevented( target ) {\r\n\r\n\t\t// Prevent accidental swipes when scrubbing timelines\r\n\t\tif( matches( target, 'video, audio' ) ) return true;\r\n\r\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\r\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\r\n\t\t\ttarget = target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchstart' event, enables support for\r\n\t * swipe and pinch gestures.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchStart( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tthis.touchStartX = event.touches[0].clientX;\r\n\t\tthis.touchStartY = event.touches[0].clientY;\r\n\t\tthis.touchStartCount = event.touches.length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchmove' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchMove( event ) {\r\n\r\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\r\n\r\n\t\tlet config = this.Reveal.getConfig();\r\n\r\n\t\t// Each touch should only trigger one action\r\n\t\tif( !this.touchCaptured ) {\r\n\t\t\tthis.Reveal.onUserInput( event );\r\n\r\n\t\t\tlet currentX = event.touches[0].clientX;\r\n\t\t\tlet currentY = event.touches[0].clientY;\r\n\r\n\t\t\t// There was only one touch point, look for a swipe\r\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\r\n\r\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\r\n\r\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\r\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\r\n\r\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.left();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.right();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.prev();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.up();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\r\n\t\t\t\t\tthis.touchCaptured = true;\r\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\r\n\t\t\t\t\t\tthis.Reveal.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.Reveal.down();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're embedded, only block touch events if they have\r\n\t\t\t\t// triggered an action\r\n\t\t\t\tif( config.embedded ) {\r\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\r\n\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\r\n\t\t\t\t// around of the viewport in iOS\r\n\t\t\t\telse {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\t// There's a bug with swiping on some Android devices unless\r\n\t\t// the default action is always prevented\r\n\t\telse if( isAndroid ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the 'touchend' event.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonTouchEnd( event ) {\r\n\r\n\t\tthis.touchCaptured = false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer down to touch start.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerDown( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchStart( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer move to touch move.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerMove( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchMove( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Convert pointer up to touch end.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tonPointerUp( event ) {\r\n\r\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\r\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\r\n\t\t\tthis.onTouchEnd( event );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","import { closest } from '../utils/util.js'\r\n\r\n/**\r\n * Manages focus when a presentation is embedded. This\r\n * helps us only capture keyboard from the presentation\r\n * a user is currently interacting with in a page where\r\n * multiple presentations are embedded.\r\n */\r\n\r\nconst STATE_FOCUS = 'focus';\r\nconst STATE_BLUR = 'blur';\r\n\r\nexport default class Focus {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\r\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.embedded ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.focus();\r\n\t\t\tthis.unbind();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tif( this.Reveal.getConfig().embedded ) {\r\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\r\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\r\n\t}\r\n\r\n\tfocus() {\r\n\r\n\t\tif( this.state !== STATE_FOCUS ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\r\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tblur() {\r\n\r\n\t\tif( this.state !== STATE_BLUR ) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\r\n\t\t}\r\n\r\n\t\tthis.state = STATE_BLUR;\r\n\r\n\t}\r\n\r\n\tisFocused() {\r\n\r\n\t\treturn this.state === STATE_FOCUS;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\r\n\r\n\t}\r\n\r\n\tonRevealPointerDown( event ) {\r\n\r\n\t\tthis.focus();\r\n\r\n\t}\r\n\r\n\tonDocumentPointerDown( event ) {\r\n\r\n\t\tlet revealElement = closest( event.target, '.reveal' );\r\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\r\n\t\t\tthis.blur();\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * Handles the showing of speaker notes\r\n */\r\nexport default class Notes {\r\n\r\n\tconstructor( Reveal ) {\r\n\r\n\t\tthis.Reveal = Reveal;\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tthis.element = document.createElement( 'div' );\r\n\t\tthis.element.className = 'speaker-notes';\r\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\r\n\t\tthis.element.setAttribute( 'tabindex', '0' );\r\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when the reveal.js config is updated.\r\n\t */\r\n\tconfigure( config, oldConfig ) {\r\n\r\n\t\tif( config.showNotes ) {\r\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Pick up notes from the current slide and display them\r\n\t * to the viewer.\r\n\t *\r\n\t * @see {@link config.showNotes}\r\n\t */\r\n\tupdate() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes &&\r\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\r\n\t\t\t!this.Reveal.isScrollView() &&\r\n\t\t\t!this.Reveal.isPrintView()\r\n\t\t) {\r\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the visibility of the speaker notes sidebar that\r\n\t * is used to share annotated slides. The notes sidebar is\r\n\t * only visible if showNotes is true and there are notes on\r\n\t * one or more slides in the deck.\r\n\t */\r\n\tupdateVisibility() {\r\n\r\n\t\tif( this.Reveal.getConfig().showNotes &&\r\n\t\t\tthis.hasNotes() &&\r\n\t\t\t!this.Reveal.isScrollView() &&\r\n\t\t\t!this.Reveal.isPrintView()\r\n\t\t) {\r\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are speaker notes for ANY slide in the\r\n\t * presentation.\r\n\t */\r\n\thasNotes() {\r\n\r\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this presentation is running inside of the\r\n\t * speaker notes window.\r\n\t *\r\n\t * @return {boolean}\r\n\t */\r\n\tisSpeakerNotesWindow() {\r\n\r\n\t\treturn !!window.location.search.match( /receiver/gi );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the speaker notes from a slide. Notes can be\r\n\t * defined in two ways:\r\n\t * 1. As a data-notes attribute on the slide <section>\r\n\t * 2. With <aside class=\"notes\"> elements inside the slide\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {(string|null)}\r\n\t */\r\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\r\n\r\n\t\t// Notes can be specified via the data-notes attribute...\r\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\r\n\t\t\treturn slide.getAttribute( 'data-notes' );\r\n\t\t}\r\n\r\n\t\t// ... or using <aside class=\"notes\"> elements\r\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\r\n\t\tif( notesElements ) {\r\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.element.remove();\r\n\r\n\t}\r\n\r\n}","/**\r\n * UI component that lets the use control auto-slide\r\n * playback via play/pause.\r\n */\r\nexport default class Playback {\r\n\r\n\t/**\r\n\t * @param {HTMLElement} container The component will append\r\n\t * itself to this\r\n\t * @param {function} progressCheck A method which will be\r\n\t * called frequently to get the current playback progress on\r\n\t * a range of 0-1\r\n\t */\r\n\tconstructor( container, progressCheck ) {\r\n\r\n\t\t// Cosmetics\r\n\t\tthis.diameter = 100;\r\n\t\tthis.diameter2 = this.diameter/2;\r\n\t\tthis.thickness = 6;\r\n\r\n\t\t// Flags if we are currently playing\r\n\t\tthis.playing = false;\r\n\r\n\t\t// Current progress on a 0-1 range\r\n\t\tthis.progress = 0;\r\n\r\n\t\t// Used to loop the animation smoothly\r\n\t\tthis.progressOffset = 1;\r\n\r\n\t\tthis.container = container;\r\n\t\tthis.progressCheck = progressCheck;\r\n\r\n\t\tthis.canvas = document.createElement( 'canvas' );\r\n\t\tthis.canvas.className = 'playback';\r\n\t\tthis.canvas.width = this.diameter;\r\n\t\tthis.canvas.height = this.diameter;\r\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\r\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\r\n\t\tthis.context = this.canvas.getContext( '2d' );\r\n\r\n\t\tthis.container.appendChild( this.canvas );\r\n\r\n\t\tthis.render();\r\n\r\n\t}\r\n\r\n\tsetPlaying( value ) {\r\n\r\n\t\tconst wasPlaying = this.playing;\r\n\r\n\t\tthis.playing = value;\r\n\r\n\t\t// Start repainting if we weren't already\r\n\t\tif( !wasPlaying && this.playing ) {\r\n\t\t\tthis.animate();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tanimate() {\r\n\r\n\t\tconst progressBefore = this.progress;\r\n\r\n\t\tthis.progress = this.progressCheck();\r\n\r\n\t\t// When we loop, offset the progress so that it eases\r\n\t\t// smoothly rather than immediately resetting\r\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\r\n\t\t\tthis.progressOffset = this.progress;\r\n\t\t}\r\n\r\n\t\tthis.render();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Renders the current progress and playback state.\r\n\t */\r\n\trender() {\r\n\r\n\t\tlet progress = this.playing ? this.progress : 0,\r\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\r\n\t\t\tx = this.diameter2,\r\n\t\t\ty = this.diameter2,\r\n\t\t\ticonSize = 28;\r\n\r\n\t\t// Ease towards 1\r\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\r\n\r\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\r\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\r\n\r\n\t\tthis.context.save();\r\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\r\n\r\n\t\t// Solid background color\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\r\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\r\n\t\tthis.context.fill();\r\n\r\n\t\t// Draw progress track\r\n\t\tthis.context.beginPath();\r\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\r\n\t\tthis.context.lineWidth = this.thickness;\r\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\r\n\t\tthis.context.stroke();\r\n\r\n\t\tif( this.playing ) {\r\n\t\t\t// Draw progress on top of track\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\r\n\t\t\tthis.context.lineWidth = this.thickness;\r\n\t\t\tthis.context.strokeStyle = '#fff';\r\n\t\t\tthis.context.stroke();\r\n\t\t}\r\n\r\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\r\n\r\n\t\t// Draw play/pause icons\r\n\t\tif( this.playing ) {\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\r\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.context.beginPath();\r\n\t\t\tthis.context.translate( 4, 0 );\r\n\t\t\tthis.context.moveTo( 0, 0 );\r\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\r\n\t\t\tthis.context.lineTo( 0, iconSize );\r\n\t\t\tthis.context.fillStyle = '#fff';\r\n\t\t\tthis.context.fill();\r\n\t\t}\r\n\r\n\t\tthis.context.restore();\r\n\r\n\t}\r\n\r\n\ton( type, listener ) {\r\n\t\tthis.canvas.addEventListener( type, listener, false );\r\n\t}\r\n\r\n\toff( type, listener ) {\r\n\t\tthis.canvas.removeEventListener( type, listener, false );\r\n\t}\r\n\r\n\tdestroy() {\r\n\r\n\t\tthis.playing = false;\r\n\r\n\t\tif( this.canvas.parentNode ) {\r\n\t\t\tthis.container.removeChild( this.canvas );\r\n\t\t}\r\n\r\n\t}\r\n\r\n}","/**\r\n * The default reveal.js config object.\r\n */\r\nexport default {\r\n\r\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\r\n\t// when the presentation is scaled to fit different resolutions\r\n\twidth: 960,\r\n\theight: 700,\r\n\r\n\t// Factor of the display size that should remain empty around the content\r\n\tmargin: 0.04,\r\n\r\n\t// Bounds for smallest/largest possible scale to apply to content\r\n\tminScale: 0.2,\r\n\tmaxScale: 2.0,\r\n\r\n\t// Display presentation control arrows\r\n\tcontrols: true,\r\n\r\n\t// Help the user learn the controls by providing hints, for example by\r\n\t// bouncing the down arrow when they first encounter a vertical slide\r\n\tcontrolsTutorial: true,\r\n\r\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\r\n\tcontrolsLayout: 'bottom-right',\r\n\r\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\r\n\t// or \"visible\"\r\n\tcontrolsBackArrows: 'faded',\r\n\r\n\t// Display a presentation progress bar\r\n\tprogress: true,\r\n\r\n\t// Display the page number of the current slide\r\n\t// - true:    Show slide number\r\n\t// - false:   Hide slide number\r\n\t//\r\n\t// Can optionally be set as a string that specifies the number formatting:\r\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\r\n\t// - \"h/v\":\t  Horizontal / vertical slide number\r\n\t// - \"c\":\t  Flattened slide number\r\n\t// - \"c/t\":\t  Flattened slide number / total slides\r\n\t//\r\n\t// Alternatively, you can provide a function that returns the slide\r\n\t// number for the current slide. The function should take in a slide\r\n\t// object and return an array with one string [slideNumber] or\r\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\r\n\tslideNumber: false,\r\n\r\n\t// Can be used to limit the contexts in which the slide number appears\r\n\t// - \"all\":      Always show the slide number\r\n\t// - \"print\":    Only when printing to PDF\r\n\t// - \"speaker\":  Only in the speaker view\r\n\tshowSlideNumber: 'all',\r\n\r\n\t// Use 1 based indexing for # links to match slide number (default is zero\r\n\t// based)\r\n\thashOneBasedIndex: false,\r\n\r\n\t// Add the current slide number to the URL hash so that reloading the\r\n\t// page/copying the URL will return you to the same slide\r\n\thash: false,\r\n\r\n\t// Flags if we should monitor the hash and change slides accordingly\r\n\trespondToHashChanges: true,\r\n\r\n\t// Enable support for jump-to-slide navigation shortcuts\r\n\tjumpToSlide: true,\r\n\r\n\t// Push each slide change to the browser history.  Implies `hash: true`\r\n\thistory: false,\r\n\r\n\t// Enable keyboard shortcuts for navigation\r\n\tkeyboard: true,\r\n\r\n\t// Optional function that blocks keyboard events when retuning false\r\n\t//\r\n\t// If you set this to 'focused', we will only capture keyboard events\r\n\t// for embedded decks when they are in focus\r\n\tkeyboardCondition: null,\r\n\r\n\t// Disables the default reveal.js slide layout (scaling and centering)\r\n\t// so that you can use custom CSS layout\r\n\tdisableLayout: false,\r\n\r\n\t// Enable the slide overview mode\r\n\toverview: true,\r\n\r\n\t// Vertical centering of slides\r\n\tcenter: true,\r\n\r\n\t// Enables touch navigation on devices with touch input\r\n\ttouch: true,\r\n\r\n\t// Loop the presentation\r\n\tloop: false,\r\n\r\n\t// Change the presentation direction to be RTL\r\n\trtl: false,\r\n\r\n\t// Changes the behavior of our navigation directions.\r\n\t//\r\n\t// \"default\"\r\n\t// Left/right arrow keys step between horizontal slides, up/down\r\n\t// arrow keys step between vertical slides. Space key steps through\r\n\t// all slides (both horizontal and vertical).\r\n\t//\r\n\t// \"linear\"\r\n\t// Removes the up/down arrows. Left/right arrows step through all\r\n\t// slides (both horizontal and vertical).\r\n\t//\r\n\t// \"grid\"\r\n\t// When this is enabled, stepping left/right from a vertical stack\r\n\t// to an adjacent vertical stack will land you at the same vertical\r\n\t// index.\r\n\t//\r\n\t// Consider a deck with six slides ordered in two vertical stacks:\r\n\t// 1.1    2.1\r\n\t// 1.2    2.2\r\n\t// 1.3    2.3\r\n\t//\r\n\t// If you're on slide 1.3 and navigate right, you will normally move\r\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\r\n\t// from 1.3 -> 2.3.\r\n\tnavigationMode: 'default',\r\n\r\n\t// Randomizes the order of slides each time the presentation loads\r\n\tshuffle: false,\r\n\r\n\t// Turns fragments on and off globally\r\n\tfragments: true,\r\n\r\n\t// Flags whether to include the current fragment in the URL,\r\n\t// so that reloading brings you to the same fragment position\r\n\tfragmentInURL: true,\r\n\r\n\t// Flags if the presentation is running in an embedded mode,\r\n\t// i.e. contained within a limited portion of the screen\r\n\tembedded: false,\r\n\r\n\t// Flags if we should show a help overlay when the question-mark\r\n\t// key is pressed\r\n\thelp: true,\r\n\r\n\t// Flags if it should be possible to pause the presentation (blackout)\r\n\tpause: true,\r\n\r\n\t// Flags if speaker notes should be visible to all viewers\r\n\tshowNotes: false,\r\n\r\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\r\n\tshowHiddenSlides: false,\r\n\r\n\t// Global override for autoplaying embedded media (video/audio/iframe)\r\n\t// - null:   Media will only autoplay if data-autoplay is present\r\n\t// - true:   All media will autoplay, regardless of individual setting\r\n\t// - false:  No media will autoplay, regardless of individual setting\r\n\tautoPlayMedia: null,\r\n\r\n\t// Global override for preloading lazy-loaded iframes\r\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\r\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\r\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\r\n\t// - false:  All iframes with data-src will be loaded only when visible\r\n\tpreloadIframes: null,\r\n\r\n\t// Can be used to globally disable auto-animation\r\n\tautoAnimate: true,\r\n\r\n\t// Optionally provide a custom element matcher that will be\r\n\t// used to dictate which elements we can animate between.\r\n\tautoAnimateMatcher: null,\r\n\r\n\t// Default settings for our auto-animate transitions, can be\r\n\t// overridden per-slide or per-element via data arguments\r\n\tautoAnimateEasing: 'ease',\r\n\tautoAnimateDuration: 1.0,\r\n\tautoAnimateUnmatched: true,\r\n\r\n\t// CSS properties that can be auto-animated. Position & scale\r\n\t// is matched separately so there's no need to include styles\r\n\t// like top/right/bottom/left, width/height or margin.\r\n\tautoAnimateStyles: [\r\n\t\t'opacity',\r\n\t\t'color',\r\n\t\t'background-color',\r\n\t\t'padding',\r\n\t\t'font-size',\r\n\t\t'line-height',\r\n\t\t'letter-spacing',\r\n\t\t'border-width',\r\n\t\t'border-color',\r\n\t\t'border-radius',\r\n\t\t'outline',\r\n\t\t'outline-offset'\r\n\t],\r\n\r\n\t// Controls automatic progression to the next slide\r\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\r\n\t//           is present on the current slide or fragment\r\n\t// - 1+:     All slides will progress automatically at the given interval\r\n\t// - false:  No auto-sliding, even if data-autoslide is present\r\n\tautoSlide: 0,\r\n\r\n\t// Stop auto-sliding after user input\r\n\tautoSlideStoppable: true,\r\n\r\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\r\n\tautoSlideMethod: null,\r\n\r\n\t// Specify the average time in seconds that you think you will spend\r\n\t// presenting each slide. This is used to show a pacing timer in the\r\n\t// speaker view\r\n\tdefaultTiming: null,\r\n\r\n\t// Enable slide navigation via mouse wheel\r\n\tmouseWheel: false,\r\n\r\n\t// Opens links in an iframe preview overlay\r\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\r\n\t// individually\r\n\tpreviewLinks: false,\r\n\r\n\t// Exposes the reveal.js API through window.postMessage\r\n\tpostMessage: true,\r\n\r\n\t// Dispatches all reveal.js events to the parent window through postMessage\r\n\tpostMessageEvents: false,\r\n\r\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\r\n\tfocusBodyOnPageVisibilityChange: true,\r\n\r\n\t// Transition style\r\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Transition speed\r\n\ttransitionSpeed: 'default', // default/fast/slow\r\n\r\n\t// Transition style for full page slide backgrounds\r\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\r\n\r\n\t// Parallax background image\r\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\r\n\r\n\t// Parallax background size\r\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\r\n\r\n\t// Parallax background repeat\r\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\r\n\r\n\t// Parallax background position\r\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\r\n\r\n\t// Amount of pixels to move the parallax background per slide step\r\n\tparallaxBackgroundHorizontal: null,\r\n\tparallaxBackgroundVertical: null,\r\n\r\n\t// Can be used to initialize reveal.js in one of the following views:\r\n\t// - print:   Render the presentation so that it can be printed to PDF\r\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\r\n\t//            triggered animations\r\n\tview: null,\r\n\r\n\t// Adjusts the height of each slide in the scroll view.\r\n\t// - full:       Each slide is as tall as the viewport\r\n\t// - compact:    Slides are as small as possible, allowing multiple slides\r\n\t//               to be visible in parallel on tall devices\r\n\tscrollLayout: 'full',\r\n\r\n\t// Control how scroll snapping works in the scroll view.\r\n\t// - false:   \tNo snapping, scrolling is continuous\r\n\t// - proximity:  Snap when close to a slide\r\n\t// - mandatory:  Always snap to the closest slide\r\n\t//\r\n\t// Only applies to presentations in scroll view.\r\n\tscrollSnap: 'mandatory',\r\n\r\n\t// Enables and configure the scroll view progress bar.\r\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\r\n\t// - true:      Always show the scrollbar\r\n\t// - false:     Never show the scrollbar\r\n\tscrollProgress: 'auto',\r\n\r\n\t// Automatically activate the scroll view when we the viewport falls\r\n\t// below the given width.\r\n\tscrollActivationWidth: 435,\r\n\r\n\t// The maximum number of pages a single slide can expand onto when printing\r\n\t// to PDF, unlimited by default\r\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\r\n\r\n\t// Prints each fragment on a separate slide\r\n\tpdfSeparateFragments: true,\r\n\r\n\t// Offset used to reduce the height of content within exported PDF pages.\r\n\t// This exists to account for environment differences based on how you\r\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\r\n\t// on precisely the total height of the document whereas in-browser\r\n\t// printing has to end one pixel before.\r\n\tpdfPageHeightOffset: -1,\r\n\r\n\t// Number of slides away from the current that are visible\r\n\tviewDistance: 3,\r\n\r\n\t// Number of slides away from the current that are visible on mobile\r\n\t// devices. It is advisable to set this to a lower number than\r\n\t// viewDistance in order to save resources.\r\n\tmobileViewDistance: 2,\r\n\r\n\t// The display mode that will be used to show slides\r\n\tdisplay: 'block',\r\n\r\n\t// Hide cursor if inactive\r\n\thideInactiveCursor: true,\r\n\r\n\t// Time before the cursor is hidden (in ms)\r\n\thideCursorTime: 5000,\r\n\r\n\t// Should we automatically sort and set indices for fragments\r\n\t// at each sync? (See Reveal.sync)\r\n\tsortFragmentsOnSync: true,\r\n\r\n\t// Script dependencies to load\r\n\tdependencies: [],\r\n\r\n\t// Plugin objects to register and use for this presentation\r\n\tplugins: []\r\n\r\n}","import SlideContent from './controllers/slidecontent.js'\r\nimport SlideNumber from './controllers/slidenumber.js'\r\nimport JumpToSlide from './controllers/jumptoslide.js'\r\nimport Backgrounds from './controllers/backgrounds.js'\r\nimport AutoAnimate from './controllers/autoanimate.js'\r\nimport ScrollView from './controllers/scrollview.js'\r\nimport PrintView from './controllers/printview.js'\r\nimport Fragments from './controllers/fragments.js'\r\nimport Overview from './controllers/overview.js'\r\nimport Keyboard from './controllers/keyboard.js'\r\nimport Location from './controllers/location.js'\r\nimport Controls from './controllers/controls.js'\r\nimport Progress from './controllers/progress.js'\r\nimport Pointer from './controllers/pointer.js'\r\nimport Plugins from './controllers/plugins.js'\r\nimport Touch from './controllers/touch.js'\r\nimport Focus from './controllers/focus.js'\r\nimport Notes from './controllers/notes.js'\r\nimport Playback from './components/playback.js'\r\nimport defaultConfig from './config.js'\r\nimport * as Util from './utils/util.js'\r\nimport * as Device from './utils/device.js'\r\nimport {\r\n\tSLIDES_SELECTOR,\r\n\tHORIZONTAL_SLIDES_SELECTOR,\r\n\tVERTICAL_SLIDES_SELECTOR,\r\n\tPOST_MESSAGE_METHOD_BLACKLIST\r\n} from './utils/constants.js'\r\n\r\n// The reveal.js version\r\nexport const VERSION = '5.0.1';\r\n\r\n/**\r\n * reveal.js\r\n * https://revealjs.com\r\n * MIT licensed\r\n *\r\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\r\n */\r\nexport default function( revealElement, options ) {\r\n\r\n\t// Support initialization with no args, one arg\r\n\t// [options] or two args [revealElement, options]\r\n\tif( arguments.length < 2 ) {\r\n\t\toptions = arguments[0];\r\n\t\trevealElement = document.querySelector( '.reveal' );\r\n\t}\r\n\r\n\tconst Reveal = {};\r\n\r\n\t// Configuration defaults, can be overridden at initialization time\r\n\tlet config = {},\r\n\r\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\r\n\t\tready = false,\r\n\r\n\t\t// The horizontal and vertical index of the currently active slide\r\n\t\tindexh,\r\n\t\tindexv,\r\n\r\n\t\t// The previous and current slide HTML elements\r\n\t\tpreviousSlide,\r\n\t\tcurrentSlide,\r\n\r\n\t\t// Remember which directions that the user has navigated towards\r\n\t\tnavigationHistory = {\r\n\t\t\thasNavigatedHorizontally: false,\r\n\t\t\thasNavigatedVertically: false\r\n\t\t},\r\n\r\n\t\t// Slides may have a data-state attribute which we pick up and apply\r\n\t\t// as a class to the body. This list contains the combined state of\r\n\t\t// all current slides.\r\n\t\tstate = [],\r\n\r\n\t\t// The current scale of the presentation (see width/height config)\r\n\t\tscale = 1,\r\n\r\n\t\t// CSS transform that is currently applied to the slides container,\r\n\t\t// split into two groups\r\n\t\tslidesTransform = { layout: '', overview: '' },\r\n\r\n\t\t// Cached references to DOM elements\r\n\t\tdom = {},\r\n\r\n\t\t// Flags if the interaction event listeners are bound\r\n\t\teventsAreBound = false,\r\n\r\n\t\t// The current slide transition state; idle or running\r\n\t\ttransition = 'idle',\r\n\r\n\t\t// The current auto-slide duration\r\n\t\tautoSlide = 0,\r\n\r\n\t\t// Auto slide properties\r\n\t\tautoSlidePlayer,\r\n\t\tautoSlideTimeout = 0,\r\n\t\tautoSlideStartTime = -1,\r\n\t\tautoSlidePaused = false,\r\n\r\n\t\t// Controllers for different aspects of our presentation. They're\r\n\t\t// all given direct references to this Reveal instance since there\r\n\t\t// may be multiple presentations running in parallel.\r\n\t\tslideContent = new SlideContent( Reveal ),\r\n\t\tslideNumber = new SlideNumber( Reveal ),\r\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\r\n\t\tautoAnimate = new AutoAnimate( Reveal ),\r\n\t\tbackgrounds = new Backgrounds( Reveal ),\r\n\t\tscrollView = new ScrollView( Reveal ),\r\n\t\tprintView = new PrintView( Reveal ),\r\n\t\tfragments = new Fragments( Reveal ),\r\n\t\toverview = new Overview( Reveal ),\r\n\t\tkeyboard = new Keyboard( Reveal ),\r\n\t\tlocation = new Location( Reveal ),\r\n\t\tcontrols = new Controls( Reveal ),\r\n\t\tprogress = new Progress( Reveal ),\r\n\t\tpointer = new Pointer( Reveal ),\r\n\t\tplugins = new Plugins( Reveal ),\r\n\t\tfocus = new Focus( Reveal ),\r\n\t\ttouch = new Touch( Reveal ),\r\n\t\tnotes = new Notes( Reveal );\r\n\r\n\t/**\r\n\t * Starts up the presentation.\r\n\t */\r\n\tfunction initialize( initOptions ) {\r\n\r\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\r\n\r\n\t\t// Cache references to key DOM elements\r\n\t\tdom.wrapper = revealElement;\r\n\t\tdom.slides = revealElement.querySelector( '.slides' );\r\n\r\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\r\n\r\n\t\t// Compose our config object in order of increasing precedence:\r\n\t\t// 1. Default reveal.js options\r\n\t\t// 2. Options provided via Reveal.configure() prior to\r\n\t\t//    initialization\r\n\t\t// 3. Options passed to the Reveal constructor\r\n\t\t// 4. Options passed to Reveal.initialize\r\n\t\t// 5. Query params\r\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\r\n\r\n\t\t// Legacy support for the ?print-pdf query\r\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\r\n\t\t\tconfig.view = 'print';\r\n\t\t}\r\n\r\n\t\tsetViewport();\r\n\r\n\t\t// Force a layout when the whole page, incl fonts, has loaded\r\n\t\twindow.addEventListener( 'load', layout, false );\r\n\r\n\t\t// Register plugins and load dependencies, then move on to #start()\r\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\r\n\r\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Encase the presentation in a reveal.js viewport. The\r\n\t * extent of the viewport differs based on configuration.\r\n\t */\r\n\tfunction setViewport() {\r\n\r\n\t\t// Embedded decks use the reveal element as their viewport\r\n\t\tif( config.embedded === true ) {\r\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\r\n\t\t}\r\n\t\t// Full-page decks use the body as their viewport\r\n\t\telse {\r\n\t\t\tdom.viewport = document.body;\r\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\r\n\t\t}\r\n\r\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Starts up reveal.js by binding input events and navigating\r\n\t * to the current URL deeplink if there is one.\r\n\t */\r\n\tfunction start() {\r\n\r\n\t\tready = true;\r\n\r\n\t\t// Remove slides hidden with data-visibility\r\n\t\tremoveHiddenSlides();\r\n\r\n\t\t// Make sure we've got all the DOM elements we need\r\n\t\tsetupDOM();\r\n\r\n\t\t// Listen to messages posted to this window\r\n\t\tsetupPostMessage();\r\n\r\n\t\t// Prevent the slides from being scrolled out of view\r\n\t\tsetupScrollPrevention();\r\n\r\n\t\t// Adds bindings for fullscreen mode\r\n\t\tsetupFullscreen();\r\n\r\n\t\t// Resets all vertical slides so that only the first is visible\r\n\t\tresetVerticalSlides();\r\n\r\n\t\t// Updates the presentation to match the current configuration values\r\n\t\tconfigure();\r\n\r\n\t\t// Create slide backgrounds\r\n\t\tbackgrounds.update( true );\r\n\r\n\t\t// Activate the print/scroll view if configured\r\n\t\tactivateInitialView();\r\n\r\n\t\t// Read the initial hash\r\n\t\tlocation.readURL();\r\n\r\n\t\t// Notify listeners that the presentation is ready but use a 1ms\r\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\r\n\t\tsetTimeout( () => {\r\n\t\t\t// Enable transitions now that we're loaded\r\n\t\t\tdom.slides.classList.remove( 'no-transition' );\r\n\r\n\t\t\tdom.wrapper.classList.add( 'ready' );\r\n\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'ready',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tindexh,\r\n\t\t\t\t\tindexv,\r\n\t\t\t\t\tcurrentSlide\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Activates the correct reveal.js view based on our config.\r\n\t * This is only invoked once during initialization.\r\n\t */\r\n\tfunction activateInitialView() {\r\n\r\n\t\tconst activatePrintView = config.view === 'print';\r\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\r\n\r\n\t\tif( activatePrintView || activateScrollView ) {\r\n\r\n\t\t\tif( activatePrintView ) {\r\n\t\t\t\tremoveEventListeners();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttouch.unbind();\r\n\t\t\t}\r\n\r\n\t\t\t// Avoid content flickering during layout\r\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\r\n\r\n\t\t\tif( activatePrintView ) {\r\n\t\t\t\t// The document needs to have loaded for the PDF layout\r\n\t\t\t\t// measurements to be accurate\r\n\t\t\t\tif( document.readyState === 'complete' ) {\r\n\t\t\t\t\tprintView.activate();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tscrollView.activate();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all slides with data-visibility=\"hidden\". This\r\n\t * is done right before the rest of the presentation is\r\n\t * initialized.\r\n\t *\r\n\t * If you want to show all hidden slides, initialize\r\n\t * reveal.js with showHiddenSlides set to true.\r\n\t */\r\n\tfunction removeHiddenSlides() {\r\n\r\n\t\tif( !config.showHiddenSlides ) {\r\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\r\n\t\t\t\tconst parent = slide.parentNode;\r\n\r\n\t\t\t\t// If this slide is part of a stack and that stack will be\r\n\t\t\t\t// empty after removing the hidden slide, remove the entire\r\n\t\t\t\t// stack\r\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\r\n\t\t\t\t\tparent.remove();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslide.remove();\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Finds and stores references to DOM elements which are\r\n\t * required by the presentation. If a required element is\r\n\t * not found, it is created.\r\n\t */\r\n\tfunction setupDOM() {\r\n\r\n\t\t// Prevent transitions while we're loading\r\n\t\tdom.slides.classList.add( 'no-transition' );\r\n\r\n\t\tif( Device.isMobile ) {\r\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\r\n\t\t}\r\n\r\n\t\tbackgrounds.render();\r\n\t\tslideNumber.render();\r\n\t\tjumpToSlide.render();\r\n\t\tcontrols.render();\r\n\t\tprogress.render();\r\n\t\tnotes.render();\r\n\r\n\t\t// Overlay graphic which is displayed during the paused mode\r\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\r\n\r\n\t\tdom.statusElement = createStatusElement();\r\n\r\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a hidden div with role aria-live to announce the\r\n\t * current slide content. Hide the div off-screen to make it\r\n\t * available only to Assistive Technologies.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction createStatusElement() {\r\n\r\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\r\n\t\tif( !statusElement ) {\r\n\t\t\tstatusElement = document.createElement( 'div' );\r\n\t\t\tstatusElement.style.position = 'absolute';\r\n\t\t\tstatusElement.style.height = '1px';\r\n\t\t\tstatusElement.style.width = '1px';\r\n\t\t\tstatusElement.style.overflow = 'hidden';\r\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\r\n\t\t\tstatusElement.classList.add( 'aria-status' );\r\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\r\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\r\n\t\t\tdom.wrapper.appendChild( statusElement );\r\n\t\t}\r\n\t\treturn statusElement;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Announces the given text to screen readers.\r\n\t */\r\n\tfunction announceStatus( value ) {\r\n\r\n\t\tdom.statusElement.textContent = value;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the given HTML element into a string of text\r\n\t * that can be announced to a screen reader. Hidden\r\n\t * elements are excluded.\r\n\t */\r\n\tfunction getStatusText( node ) {\r\n\r\n\t\tlet text = '';\r\n\r\n\t\t// Text node\r\n\t\tif( node.nodeType === 3 ) {\r\n\t\t\ttext += node.textContent;\r\n\t\t}\r\n\t\t// Element node\r\n\t\telse if( node.nodeType === 1 ) {\r\n\r\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\r\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\r\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\r\n\r\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\r\n\t\t\t\t\ttext += getStatusText( child );\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttext = text.trim();\r\n\r\n\t\treturn text === '' ? '' : text + ' ';\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * This is an unfortunate necessity. Some actions – such as\r\n\t * an input field being focused in an iframe or using the\r\n\t * keyboard to expand text selection beyond the bounds of\r\n\t * a slide – can trigger our content to be pushed out of view.\r\n\t * This scrolling can not be prevented by hiding overflow in\r\n\t * CSS (we already do) so we have to resort to repeatedly\r\n\t * checking if the slides have been offset :(\r\n\t */\r\n\tfunction setupScrollPrevention() {\r\n\r\n\t\tsetInterval( () => {\r\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\r\n\t\t\t\tdom.wrapper.scrollTop = 0;\r\n\t\t\t\tdom.wrapper.scrollLeft = 0;\r\n\t\t\t}\r\n\t\t}, 1000 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * After entering fullscreen we need to force a layout to\r\n\t * get our presentations to scale correctly. This behavior\r\n\t * is inconsistent across browsers but a force layout seems\r\n\t * to normalize it.\r\n\t */\r\n\tfunction setupFullscreen() {\r\n\r\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\r\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Registers a listener to postMessage events, this makes it\r\n\t * possible to call all reveal.js API methods from another\r\n\t * window. For example:\r\n\t *\r\n\t * revealWindow.postMessage( JSON.stringify({\r\n\t *   method: 'slide',\r\n\t *   args: [ 2 ]\r\n\t * }), '*' );\r\n\t */\r\n\tfunction setupPostMessage() {\r\n\r\n\t\tif( config.postMessage ) {\r\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies the configuration settings from the config\r\n\t * object. May be called multiple times.\r\n\t *\r\n\t * @param {object} options\r\n\t */\r\n\tfunction configure( options ) {\r\n\r\n\t\tconst oldConfig = { ...config }\r\n\r\n\t\t// New config options may be passed when this method\r\n\t\t// is invoked through the API after initialization\r\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\r\n\r\n\t\t// Abort if reveal.js hasn't finished loading, config\r\n\t\t// changes will be applied automatically once ready\r\n\t\tif( Reveal.isReady() ===  false ) return;\r\n\r\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\r\n\r\n\t\t// The transition is added as a class on the .reveal element\r\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\r\n\t\tdom.wrapper.classList.add( config.transition );\r\n\r\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\r\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\r\n\r\n\t\t// Expose our configured slide dimensions as custom props\r\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\r\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\r\n\r\n\t\tif( config.shuffle ) {\r\n\t\t\tshuffle();\r\n\t\t}\r\n\r\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\r\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\r\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\r\n\r\n\t\t// Exit the paused mode if it was configured off\r\n\t\tif( config.pause === false ) {\r\n\t\t\tresume();\r\n\t\t}\r\n\r\n\t\t// Iframe link previews\r\n\t\tif( config.previewLinks ) {\r\n\t\t\tenablePreviewLinks();\r\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdisablePreviewLinks();\r\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\r\n\t\t}\r\n\r\n\t\t// Reset all changes made by auto-animations\r\n\t\tautoAnimate.reset();\r\n\r\n\t\t// Remove existing auto-slide controls\r\n\t\tif( autoSlidePlayer ) {\r\n\t\t\tautoSlidePlayer.destroy();\r\n\t\t\tautoSlidePlayer = null;\r\n\t\t}\r\n\r\n\t\t// Generate auto-slide controls if needed\r\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\r\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\r\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\r\n\t\t\t} );\r\n\r\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\r\n\t\t\tautoSlidePaused = false;\r\n\t\t}\r\n\r\n\t\t// Add the navigation mode to the DOM so we can adjust styling\r\n\t\tif( config.navigationMode !== 'default' ) {\r\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\r\n\t\t}\r\n\r\n\t\tnotes.configure( config, oldConfig );\r\n\t\tfocus.configure( config, oldConfig );\r\n\t\tpointer.configure( config, oldConfig );\r\n\t\tcontrols.configure( config, oldConfig );\r\n\t\tprogress.configure( config, oldConfig );\r\n\t\tkeyboard.configure( config, oldConfig );\r\n\t\tfragments.configure( config, oldConfig );\r\n\t\tslideNumber.configure( config, oldConfig );\r\n\r\n\t\tsync();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Binds all event listeners.\r\n\t */\r\n\tfunction addEventListeners() {\r\n\r\n\t\teventsAreBound = true;\r\n\r\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tif( config.touch ) touch.bind();\r\n\t\tif( config.keyboard ) keyboard.bind();\r\n\t\tif( config.progress ) progress.bind();\r\n\t\tif( config.respondToHashChanges ) location.bind();\r\n\t\tcontrols.bind();\r\n\t\tfocus.bind();\r\n\r\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\r\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\r\n\r\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\r\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbinds all event listeners.\r\n\t */\r\n\tfunction removeEventListeners() {\r\n\r\n\t\teventsAreBound = false;\r\n\r\n\t\ttouch.unbind();\r\n\t\tfocus.unbind();\r\n\t\tkeyboard.unbind();\r\n\t\tcontrols.unbind();\r\n\t\tprogress.unbind();\r\n\t\tlocation.unbind();\r\n\r\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\r\n\r\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\r\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\r\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Uninitializes reveal.js by undoing changes made to the\r\n\t * DOM and removing all event listeners.\r\n\t */\r\n\tfunction destroy() {\r\n\r\n\t\tremoveEventListeners();\r\n\t\tcancelAutoSlide();\r\n\t\tdisablePreviewLinks();\r\n\r\n\t\t// Destroy controllers\r\n\t\tnotes.destroy();\r\n\t\tfocus.destroy();\r\n\t\tplugins.destroy();\r\n\t\tpointer.destroy();\r\n\t\tcontrols.destroy();\r\n\t\tprogress.destroy();\r\n\t\tbackgrounds.destroy();\r\n\t\tslideNumber.destroy();\r\n\t\tjumpToSlide.destroy();\r\n\r\n\t\t// Remove event listeners\r\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\r\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\r\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\r\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\r\n\t\twindow.removeEventListener( 'load', layout, false );\r\n\r\n\t\t// Undo DOM changes\r\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\r\n\t\tif( dom.statusElement ) dom.statusElement.remove();\r\n\r\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\r\n\r\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\r\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\r\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\r\n\r\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\r\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\r\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\r\n\r\n\t\tdom.slides.style.removeProperty( 'width' );\r\n\t\tdom.slides.style.removeProperty( 'height' );\r\n\t\tdom.slides.style.removeProperty( 'zoom' );\r\n\t\tdom.slides.style.removeProperty( 'left' );\r\n\t\tdom.slides.style.removeProperty( 'top' );\r\n\t\tdom.slides.style.removeProperty( 'bottom' );\r\n\t\tdom.slides.style.removeProperty( 'right' );\r\n\t\tdom.slides.style.removeProperty( 'transform' );\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\r\n\t\t\tslide.style.removeProperty( 'display' );\r\n\t\t\tslide.style.removeProperty( 'top' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to one of our custom reveal.js events,\r\n\t * like slidechanged.\r\n\t */\r\n\tfunction on( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.addEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unsubscribes from a reveal.js event.\r\n\t */\r\n\tfunction off( type, listener, useCapture ) {\r\n\r\n\t\trevealElement.removeEventListener( type, listener, useCapture );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies CSS transforms to the slides container. The container\r\n\t * is transformed from two separate sources: layout and the overview\r\n\t * mode.\r\n\t *\r\n\t * @param {object} transforms\r\n\t */\r\n\tfunction transformSlides( transforms ) {\r\n\r\n\t\t// Pick up new transforms from arguments\r\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\r\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\r\n\r\n\t\t// Apply the transforms to the slides container\r\n\t\tif( slidesTransform.layout ) {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches an event of the specified type from the\r\n\t * reveal DOM element.\r\n\t */\r\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\r\n\r\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\r\n\t\tevent.initEvent( type, bubbles, true );\r\n\t\tUtil.extend( event, data );\r\n\t\ttarget.dispatchEvent( event );\r\n\r\n\t\tif( target === dom.wrapper ) {\r\n\t\t\t// If we're in an iframe, post each reveal.js event to the\r\n\t\t\t// parent window. Used by the notes plugin\r\n\t\t\tdispatchPostMessage( type );\r\n\t\t}\r\n\r\n\t\treturn event;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches a slidechanged event.\r\n\t *\r\n\t * @param {string} origin Used to identify multiplex clients\r\n\t */\r\n\tfunction dispatchSlideChanged( origin ) {\r\n\r\n\t\tdispatchEvent({\r\n\t\t\ttype: 'slidechanged',\r\n\t\t\tdata: {\r\n\t\t\t\tindexh,\r\n\t\t\t\tindexv,\r\n\t\t\t\tpreviousSlide,\r\n\t\t\t\tcurrentSlide,\r\n\t\t\t\torigin\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatched a postMessage of the given type from our window.\r\n\t */\r\n\tfunction dispatchPostMessage( type, data ) {\r\n\r\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\r\n\t\t\tlet message = {\r\n\t\t\t\tnamespace: 'reveal',\r\n\t\t\t\teventName: type,\r\n\t\t\t\tstate: getState()\r\n\t\t\t};\r\n\r\n\t\t\tUtil.extend( message, data );\r\n\r\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Bind preview frame links.\r\n\t *\r\n\t * @param {string} [selector=a] - selector for anchors\r\n\t */\r\n\tfunction enablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind preview frame links.\r\n\t */\r\n\tfunction disablePreviewLinks( selector = 'a' ) {\r\n\r\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\r\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\r\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Opens a preview window for the target URL.\r\n\t *\r\n\t * @param {string} url - url for preview iframe src\r\n\t */\r\n\tfunction showPreview( url ) {\r\n\r\n\t\tcloseOverlay();\r\n\r\n\t\tdom.overlay = document.createElement( 'div' );\r\n\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\tdom.overlay.classList.add( 'overlay-preview' );\r\n\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\tdom.overlay.innerHTML =\r\n\t\t\t`<header>\r\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\r\n\t\t\t</header>\r\n\t\t\t<div class=\"spinner\"></div>\r\n\t\t\t<div class=\"viewport\">\r\n\t\t\t\t<iframe src=\"${url}\"></iframe>\r\n\t\t\t\t<small class=\"viewport-inner\">\r\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\r\n\t\t\t\t</small>\r\n\t\t\t</div>`;\r\n\r\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\r\n\t\t\tdom.overlay.classList.add( 'loaded' );\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}, false );\r\n\r\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\r\n\t\t\tcloseOverlay();\r\n\t\t}, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Open or close help overlay window.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which overrides the\r\n\t * toggle logic and forcibly sets the desired state. True means\r\n\t * help is open, false means it's closed.\r\n\t */\r\n\tfunction toggleHelp( override ){\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? showHelp() : closeOverlay();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif( dom.overlay ) {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tshowHelp();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Opens an overlay window with help material.\r\n\t */\r\n\tfunction showHelp() {\r\n\r\n\t\tif( config.help ) {\r\n\r\n\t\t\tcloseOverlay();\r\n\r\n\t\t\tdom.overlay = document.createElement( 'div' );\r\n\t\t\tdom.overlay.classList.add( 'overlay' );\r\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\r\n\t\t\tdom.wrapper.appendChild( dom.overlay );\r\n\r\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\r\n\r\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\r\n\t\t\t\tbindings = keyboard.getBindings();\r\n\r\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\r\n\t\t\tfor( let key in shortcuts ) {\r\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\r\n\t\t\t}\r\n\r\n\t\t\t// Add custom key bindings that have associated descriptions\r\n\t\t\tfor( let binding in bindings ) {\r\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\r\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\thtml += '</table>';\r\n\r\n\t\t\tdom.overlay.innerHTML = `\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div class=\"viewport\">\r\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\r\n\t\t\t\tcloseOverlay();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Closes any currently open overlay.\r\n\t */\r\n\tfunction closeOverlay() {\r\n\r\n\t\tif( dom.overlay ) {\r\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\r\n\t\t\tdom.overlay = null;\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies JavaScript-controlled layout rules to the\r\n\t * presentation.\r\n\t */\r\n\tfunction layout() {\r\n\r\n\t\tif( dom.wrapper && !printView.isActive() ) {\r\n\r\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\r\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\r\n\r\n\t\t\tif( !config.disableLayout ) {\r\n\r\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\r\n\t\t\t\t// viewport which leads to part of the presentation being\r\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\r\n\t\t\t\t// property where 100x adds up to the correct height.\r\n\t\t\t\t//\r\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\r\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\r\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst size = scrollView.isActive() ?\r\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\r\n\t\t\t\t\t\t\t getComputedSlideSize();\r\n\r\n\t\t\t\tconst oldScale = scale;\r\n\r\n\t\t\t\t// Layout the contents of the slides\r\n\t\t\t\tlayoutSlideContents( config.width, config.height );\r\n\r\n\t\t\t\tdom.slides.style.width = size.width + 'px';\r\n\t\t\t\tdom.slides.style.height = size.height + 'px';\r\n\r\n\t\t\t\t// Determine scale of content to fit within available space\r\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\r\n\r\n\t\t\t\t// Respect max/min scale settings\r\n\t\t\t\tscale = Math.max( scale, config.minScale );\r\n\t\t\t\tscale = Math.min( scale, config.maxScale );\r\n\r\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\r\n\t\t\t\t// in the scroll view\r\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '';\r\n\t\t\t\t\tdom.slides.style.top = '';\r\n\t\t\t\t\tdom.slides.style.bottom = '';\r\n\t\t\t\t\tdom.slides.style.right = '';\r\n\t\t\t\t\ttransformSlides( { layout: '' } );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdom.slides.style.zoom = '';\r\n\t\t\t\t\tdom.slides.style.left = '50%';\r\n\t\t\t\t\tdom.slides.style.top = '50%';\r\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\r\n\t\t\t\t\tdom.slides.style.right = 'auto';\r\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Select all slides, vertical and horizontal\r\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\r\n\r\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\r\n\t\t\t\t\tconst slide = slides[ i ];\r\n\r\n\t\t\t\t\t// Don't bother updating invisible slides\r\n\t\t\t\t\tif( slide.style.display === 'none' ) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\r\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\r\n\t\t\t\t\t\t// children will be\r\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\t\t\tslide.style.top = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tslide.style.top = '';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( oldScale !== scale ) {\r\n\t\t\t\t\tdispatchEvent({\r\n\t\t\t\t\t\ttype: 'resize',\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\toldScale,\r\n\t\t\t\t\t\t\tscale,\r\n\t\t\t\t\t\t\tsize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Responsively turn on the scroll mode if there is an activation\r\n\t\t\t\t// width configured. Ignore if we're configured to always be in\r\n\t\t\t\t// scroll mode.\r\n\t\t\t\tif( typeof config.scrollActivationWidth === 'number' && config.view !== 'scroll' ) {\r\n\t\t\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\r\n\t\t\t\t\t\tif( !scrollView.isActive() ) scrollView.activate();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\r\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\r\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\r\n\r\n\t\t\tscrollView.layout();\r\n\r\n\t\t\tprogress.update();\r\n\t\t\tbackgrounds.updateParallax();\r\n\r\n\t\t\tif( overview.isActive() ) {\r\n\t\t\t\toverview.update();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Applies layout logic to the contents of all slides in\r\n\t * the presentation.\r\n\t *\r\n\t * @param {string|number} width\r\n\t * @param {string|number} height\r\n\t */\r\n\tfunction layoutSlideContents( width, height ) {\r\n\t\t// Handle sizing of elements with the 'r-stretch' class\r\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\r\n\r\n\t\t\t// Determine how much vertical space we can use\r\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\r\n\r\n\t\t\t// Consider the aspect ratio of media elements\r\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\r\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\r\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\r\n\r\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\r\n\r\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\r\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telement.style.width = width + 'px';\r\n\t\t\t\telement.style.height = remainingHeight + 'px';\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the computed pixel size of our slides. These\r\n\t * values are based on the width and height configuration\r\n\t * options.\r\n\t *\r\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\r\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\r\n\t */\r\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\r\n\r\n\t\tlet width = config.width;\r\n\t\tlet height = config.height;\r\n\r\n\t\tif( config.disableLayout ) {\r\n\t\t\twidth = dom.slides.offsetWidth;\r\n\t\t\theight = dom.slides.offsetHeight;\r\n\t\t}\r\n\r\n\t\tconst size = {\r\n\t\t\t// Slide size\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\r\n\t\t\t// Presentation size\r\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\r\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\r\n\t\t};\r\n\r\n\t\t// Reduce available space by margin\r\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\r\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\r\n\r\n\t\t// Slide width may be a percentage of available width\r\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\r\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\r\n\t\t}\r\n\r\n\t\t// Slide height may be a percentage of available height\r\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\r\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\r\n\t\t}\r\n\r\n\t\treturn size;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Stores the vertical index of a stack so that the same\r\n\t * vertical slide can be selected when navigating to and\r\n\t * from the stack.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t * @param {string|number} [v=0] Index to memorize\r\n\t */\r\n\tfunction setPreviousVerticalIndex( stack, v ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\r\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the vertical index which was stored using\r\n\t * #setPreviousVerticalIndex() or 0 if no previous index\r\n\t * exists.\r\n\t *\r\n\t * @param {HTMLElement} stack The vertical stack element\r\n\t */\r\n\tfunction getPreviousVerticalIndex( stack ) {\r\n\r\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\r\n\t\t\t// Prefer manually defined start-indexv\r\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\r\n\r\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is vertical\r\n\t * (nested within another slide).\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\r\n\t * orientation of\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalSlide( slide = currentSlide ) {\r\n\r\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the current or specified slide is a stack containing\r\n\t * vertical slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide]\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isVerticalStack( slide = currentSlide ) {\r\n\r\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're on the last slide in the current\r\n\t * vertical stack.\r\n\t */\r\n\tfunction isLastVerticalSlide() {\r\n\r\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the first slide in\r\n\t * the presentation.\r\n\t */\r\n\tfunction isFirstSlide() {\r\n\r\n\t\treturn indexh === 0 && indexv === 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if we're currently on the last slide in\r\n\t * the presenation. If the last slide is a stack, we only\r\n\t * consider this the last slide if it's at the end of the\r\n\t * stack.\r\n\t */\r\n\tfunction isLastSlide() {\r\n\r\n\t\tif( currentSlide ) {\r\n\t\t\t// Does this slide have a next sibling?\r\n\t\t\tif( currentSlide.nextElementSibling ) return false;\r\n\r\n\t\t\t// If it's vertical, does its parent have a next sibling?\r\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Enters the paused mode which fades everything on screen to\r\n\t * black.\r\n\t */\r\n\tfunction pause() {\r\n\r\n\t\tif( config.pause ) {\r\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t\t\tcancelAutoSlide();\r\n\t\t\tdom.wrapper.classList.add( 'paused' );\r\n\r\n\t\t\tif( wasPaused === false ) {\r\n\t\t\t\tdispatchEvent({ type: 'paused' });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Exits from the paused mode.\r\n\t */\r\n\tfunction resume() {\r\n\r\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\r\n\t\tdom.wrapper.classList.remove( 'paused' );\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\tif( wasPaused ) {\r\n\t\t\tdispatchEvent({ type: 'resumed' });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the paused mode on and off.\r\n\t */\r\n\tfunction togglePause( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? pause() : resume();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tisPaused() ? resume() : pause();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if we are currently in the paused mode.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isPaused() {\r\n\r\n\t\treturn dom.wrapper.classList.contains( 'paused' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles visibility of the jump-to-slide UI.\r\n\t */\r\n\tfunction toggleJumpToSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles the auto slide mode on and off.\r\n\t *\r\n\t * @param {Boolean} [override] Flag which sets the desired state.\r\n\t * True means autoplay starts, false means it stops.\r\n\t */\r\n\r\n\tfunction toggleAutoSlide( override ) {\r\n\r\n\t\tif( typeof override === 'boolean' ) {\r\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the auto slide mode is currently on.\r\n\t *\r\n\t * @return {Boolean}\r\n\t */\r\n\tfunction isAutoSliding() {\r\n\r\n\t\treturn !!( autoSlide && !autoSlidePaused );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Steps from the current point in the presentation to the\r\n\t * slide which matches the specified horizontal and vertical\r\n\t * indices.\r\n\t *\r\n\t * @param {number} [h=indexh] Horizontal index of the target slide\r\n\t * @param {number} [v=indexv] Vertical index of the target slide\r\n\t * @param {number} [f] Index of a fragment within the\r\n\t * target slide to activate\r\n\t * @param {number} [origin] Origin for use in multimaster environments\r\n\t */\r\n\tfunction slide( h, v, f, origin ) {\r\n\r\n\t\t// Dispatch an event before the slide\r\n\t\tconst slidechange = dispatchEvent({\r\n\t\t\ttype: 'beforeslidechange',\r\n\t\t\tdata: {\r\n\t\t\t\tindexh: h === undefined ? indexh : h,\r\n\t\t\t\tindexv: v === undefined ? indexv : v,\r\n\t\t\t\torigin\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Abort if this slide change was prevented by an event listener\r\n\t\tif( slidechange.defaultPrevented ) return;\r\n\r\n\t\t// Remember where we were at before\r\n\t\tpreviousSlide = currentSlide;\r\n\r\n\t\t// Query all horizontal slides in the deck\r\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t\t// If we're in scroll mode, we scroll the target slide into view\r\n\t\t// instead of running our standard slide transition\r\n\t\tif( scrollView.isActive() ) {\r\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\r\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Abort if there are no slides\r\n\t\tif( horizontalSlides.length === 0 ) return;\r\n\r\n\t\t// If no vertical index is specified and the upcoming slide is a\r\n\t\t// stack, resume at its previous vertical index\r\n\t\tif( v === undefined && !overview.isActive() ) {\r\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\r\n\t\t}\r\n\r\n\t\t// If we were on a vertical stack, remember what vertical index\r\n\t\t// it was on so we can resume at the same position when returning\r\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\r\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\r\n\t\t}\r\n\r\n\t\t// Remember the state before this slide\r\n\t\tconst stateBefore = state.concat();\r\n\r\n\t\t// Reset the state array\r\n\t\tstate.length = 0;\r\n\r\n\t\tlet indexhBefore = indexh || 0,\r\n\t\t\tindexvBefore = indexv || 0;\r\n\r\n\t\t// Activate and transition to the new slide\r\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\r\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\r\n\r\n\t\t// Dispatch an event if the slide changed\r\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\r\n\r\n\t\t// Ensure that the previous slide is never the same as the current\r\n\t\tif( !slideChanged ) previousSlide = null;\r\n\r\n\t\t// Find the current horizontal slide and any possible vertical slides\r\n\t\t// within it\r\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\r\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t// Store references to the previous and current slides\r\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\r\n\r\n\t\tlet autoAnimateTransition = false;\r\n\r\n\t\t// Detect if we're moving between two auto-animated slides\r\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\r\n\t\t\ttransition = 'running';\r\n\r\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\r\n\r\n\t\t\t// If this is an auto-animated transition, we disable the\r\n\t\t\t// regular slide transition\r\n\t\t\t//\r\n\t\t\t// Note 20-03-2020:\r\n\t\t\t// This needs to happen before we update slide visibility,\r\n\t\t\t// otherwise transitions will still run in Safari.\r\n\t\t\tif( autoAnimateTransition ) {\r\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Update the visibility of slides now that the indices have changed\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tlayout();\r\n\r\n\t\t// Update the overview if it's currently active\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.update();\r\n\t\t}\r\n\r\n\t\t// Show fragment, if specified\r\n\t\tif( typeof f !== 'undefined' ) {\r\n\t\t\tfragments.goto( f );\r\n\t\t}\r\n\r\n\t\t// Solves an edge case where the previous slide maintains the\r\n\t\t// 'present' class when navigating between adjacent vertical\r\n\t\t// stacks\r\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\r\n\t\t\tpreviousSlide.classList.remove( 'present' );\r\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t// Reset all slides upon navigate to home\r\n\t\t\tif( isFirstSlide() ) {\r\n\t\t\t\t// Launch async task\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\r\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\r\n\t\t\t\t\t} );\r\n\t\t\t\t}, 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Apply the new state\r\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\r\n\t\t\t// Check if this state existed on the previous slide. If it\r\n\t\t\t// did, we will avoid adding it repeatedly\r\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\r\n\t\t\t\tif( stateBefore[j] === state[i] ) {\r\n\t\t\t\t\tstateBefore.splice( j, 1 );\r\n\t\t\t\t\tcontinue stateLoop;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdom.viewport.classList.add( state[i] );\r\n\r\n\t\t\t// Dispatch custom event matching the state's name\r\n\t\t\tdispatchEvent({ type: state[i] });\r\n\t\t}\r\n\r\n\t\t// Clean up the remains of the previous state\r\n\t\twhile( stateBefore.length ) {\r\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\r\n\t\t}\r\n\r\n\t\tif( slideChanged ) {\r\n\t\t\tdispatchSlideChanged( origin );\r\n\t\t}\r\n\r\n\t\t// Handle embedded content\r\n\t\tif( slideChanged || !previousSlide ) {\r\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\t// Announce the current slide contents to screen readers\r\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\r\n\t\t// from triggering layout mid-frame\r\n\t\trequestAnimationFrame( () => {\r\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\t\t});\r\n\r\n\t\tprogress.update();\r\n\t\tcontrols.update();\r\n\t\tnotes.update();\r\n\t\tbackgrounds.update();\r\n\t\tbackgrounds.updateParallax();\r\n\t\tslideNumber.update();\r\n\t\tfragments.update();\r\n\r\n\t\t// Update the URL hash\r\n\t\tlocation.writeURL();\r\n\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Auto-animation\r\n\t\tif( autoAnimateTransition ) {\r\n\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\r\n\t\t\t}, 0 );\r\n\r\n\t\t\tif( config.autoAnimate ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks whether or not an auto-animation should take place between\r\n\t * the two given slides.\r\n\t *\r\n\t * @param {HTMLElement} fromSlide\r\n\t * @param {HTMLElement} toSlide\r\n\t * @param {number} indexhBefore\r\n\t * @param {number} indexvBefore\r\n\t *\r\n\t * @returns {boolean}\r\n\t */\r\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\r\n\r\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\r\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\r\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called anytime a new slide should be activated while in the scroll\r\n\t * view. The active slide is the page that occupies the most space in\r\n\t * the scrollable viewport.\r\n\t *\r\n\t * @param {number} pageIndex\r\n\t * @param {HTMLElement} slideElement\r\n\t */\r\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\r\n\r\n\t\tlet indexhBefore = indexh || 0;\r\n\r\n\t\tindexh = h;\r\n\t\tindexv = v;\r\n\r\n\t\tconst slideChanged = currentSlide !== slideElement;\r\n\r\n\t\tpreviousSlide = currentSlide;\r\n\t\tcurrentSlide = slideElement;\r\n\r\n\t\tif( currentSlide && previousSlide ) {\r\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\r\n\t\t\t\t// Run the auto-animation between our slides\r\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Start or stop embedded content like videos and iframes\r\n\t\tif( slideChanged ) {\r\n\t\t\tif( previousSlide ) {\r\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\r\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\r\n\t\t\t}\r\n\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame( () => {\r\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\r\n\t\t});\r\n\r\n\t\tdispatchSlideChanged();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Syncs the presentation with the current DOM. Useful\r\n\t * when new slides or control elements are added or when\r\n\t * the configuration has changed.\r\n\t */\r\n\tfunction sync() {\r\n\r\n\t\t// Subscribe to input\r\n\t\tremoveEventListeners();\r\n\t\taddEventListeners();\r\n\r\n\t\t// Force a layout to make sure the current config is accounted for\r\n\t\tlayout();\r\n\r\n\t\t// Reflect the current autoSlide value\r\n\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t// Start auto-sliding if it's enabled\r\n\t\tcueAutoSlide();\r\n\r\n\t\t// Re-create all slide backgrounds\r\n\t\tbackgrounds.create();\r\n\r\n\t\t// Write the current hash to the URL\r\n\t\tlocation.writeURL();\r\n\r\n\t\tif( config.sortFragmentsOnSync === true ) {\r\n\t\t\tfragments.sortAll();\r\n\t\t}\r\n\r\n\t\tcontrols.update();\r\n\t\tprogress.update();\r\n\r\n\t\tupdateSlidesVisibility();\r\n\r\n\t\tnotes.update();\r\n\t\tnotes.updateVisibility();\r\n\t\tbackgrounds.update( true );\r\n\t\tslideNumber.update();\r\n\t\tslideContent.formatEmbeddedContent();\r\n\r\n\t\t// Start or stop embedded content depending on global config\r\n\t\tif( config.autoPlayMedia === false ) {\r\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\r\n\t\t}\r\n\r\n\t\tif( overview.isActive() ) {\r\n\t\t\toverview.layout();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates reveal.js to keep in sync with new slide attributes. For\r\n\t * example, if you add a new `data-background-image` you can call\r\n\t * this to have reveal.js render the new background image.\r\n\t *\r\n\t * Similar to #sync() but more efficient when you only need to\r\n\t * refresh a specific slide.\r\n\t *\r\n\t * @param {HTMLElement} slide\r\n\t */\r\n\tfunction syncSlide( slide = currentSlide ) {\r\n\r\n\t\tbackgrounds.sync( slide );\r\n\t\tfragments.sync( slide );\r\n\r\n\t\tslideContent.load( slide );\r\n\r\n\t\tbackgrounds.update();\r\n\t\tnotes.update();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Resets all vertical slides so that only the first\r\n\t * is visible.\r\n\t */\r\n\tfunction resetVerticalSlides() {\r\n\r\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\r\n\r\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\r\n\r\n\t\t\t\tif( y > 0 ) {\r\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\r\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\r\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\r\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Randomly shuffles all slides in the deck.\r\n\t */\r\n\tfunction shuffle( slides = getHorizontalSlides() ) {\r\n\r\n\t\tslides.forEach( ( slide, i ) => {\r\n\r\n\t\t\t// Insert the slide next to a randomly picked sibling slide\r\n\t\t\t// slide. This may cause the slide to insert before itself,\r\n\t\t\t// but that's not an issue.\r\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\r\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\r\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\r\n\t\t\t}\r\n\r\n\t\t\t// Randomize the order of vertical slides (if there are any)\r\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\r\n\t\t\tif( verticalSlides.length ) {\r\n\t\t\t\tshuffle( verticalSlides );\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Updates one dimension of slides by showing the slide\r\n\t * with the specified index.\r\n\t *\r\n\t * @param {string} selector A CSS selector that will fetch\r\n\t * the group of slides we are working with\r\n\t * @param {number} index The index of the slide that should be\r\n\t * shown\r\n\t *\r\n\t * @return {number} The index of the slide that is now shown,\r\n\t * might differ from the passed in index if it was out of\r\n\t * bounds.\r\n\t */\r\n\tfunction updateSlides( selector, index ) {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\r\n\t\t\tslidesLength = slides.length;\r\n\r\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\r\n\t\tlet loopedForwards = false;\r\n\t\tlet loopedBackwards = false;\r\n\r\n\t\tif( slidesLength ) {\r\n\r\n\t\t\t// Should the index loop?\r\n\t\t\tif( config.loop ) {\r\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\r\n\r\n\t\t\t\tindex %= slidesLength;\r\n\r\n\t\t\t\tif( index < 0 ) {\r\n\t\t\t\t\tindex = slidesLength + index;\r\n\t\t\t\t\tloopedBackwards = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Enforce max and minimum index bounds\r\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\r\n\r\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\r\n\t\t\t\tlet element = slides[i];\r\n\r\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\r\n\r\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\r\n\t\t\t\telement.classList.remove( 'past' );\r\n\t\t\t\telement.classList.remove( 'present' );\r\n\t\t\t\telement.classList.remove( 'future' );\r\n\r\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\r\n\t\t\t\telement.setAttribute( 'hidden', '' );\r\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\r\n\r\n\t\t\t\t// If this element contains vertical slides\r\n\t\t\t\tif( element.querySelector( 'section' ) ) {\r\n\t\t\t\t\telement.classList.add( 'stack' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\r\n\t\t\t\tif( printMode ) {\r\n\t\t\t\t\telement.classList.add( 'present' );\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( i < index ) {\r\n\t\t\t\t\t// Any element previous to index is given the 'past' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Show all fragments in prior slides\r\n\t\t\t\t\t\tshowFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if( i > index ) {\r\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\r\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\r\n\r\n\t\t\t\t\tif( config.fragments ) {\r\n\t\t\t\t\t\t// Hide all fragments in future slides\r\n\t\t\t\t\t\thideFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Update the visibility of fragments when a presentation loops\r\n\t\t\t\t// in either direction\r\n\t\t\t\telse if( i === index && config.fragments ) {\r\n\t\t\t\t\tif( loopedForwards ) {\r\n\t\t\t\t\t\thideFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if( loopedBackwards ) {\r\n\t\t\t\t\t\tshowFragmentsIn( element );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet slide = slides[index];\r\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\r\n\r\n\t\t\t// Mark the current slide as present\r\n\t\t\tslide.classList.add( 'present' );\r\n\t\t\tslide.removeAttribute( 'hidden' );\r\n\t\t\tslide.removeAttribute( 'aria-hidden' );\r\n\r\n\t\t\tif( !wasPresent ) {\r\n\t\t\t\t// Dispatch an event indicating the slide is now visible\r\n\t\t\t\tdispatchEvent({\r\n\t\t\t\t\ttarget: slide,\r\n\t\t\t\t\ttype: 'visible',\r\n\t\t\t\t\tbubbles: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// If this slide has a state associated with it, add it\r\n\t\t\t// onto the current state of the deck\r\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\r\n\t\t\tif( slideState ) {\r\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Since there are no slides we can't be anywhere beyond the\r\n\t\t\t// zeroth index\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\r\n\t\treturn index;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Shows all fragment elements within the given container.\r\n\t */\r\n\tfunction showFragmentsIn( container ) {\r\n\r\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\r\n\t\t\tfragment.classList.add( 'visible' );\r\n\t\t\tfragment.classList.remove( 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all fragment elements within the given container.\r\n\t */\r\n\tfunction hideFragmentsIn( container ) {\r\n\r\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\r\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Optimization method; hide all slides that are far away\r\n\t * from the present slide.\r\n\t */\r\n\tfunction updateSlidesVisibility() {\r\n\r\n\t\t// Select all slides and convert the NodeList result to\r\n\t\t// an array\r\n\t\tlet horizontalSlides = getHorizontalSlides(),\r\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\r\n\t\t\tdistanceX,\r\n\t\t\tdistanceY;\r\n\r\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\r\n\r\n\t\t\t// The number of steps away from the present slide that will\r\n\t\t\t// be visible\r\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\r\n\r\n\t\t\t// Shorten the view distance on devices that typically have\r\n\t\t\t// less resources\r\n\t\t\tif( Device.isMobile ) {\r\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\r\n\t\t\t}\r\n\r\n\t\t\t// All slides need to be visible when exporting to PDF\r\n\t\t\tif( printView.isActive() ) {\r\n\t\t\t\tviewDistance = Number.MAX_VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\r\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\r\n\r\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\r\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\r\n\r\n\t\t\t\t// Determine how far away this slide is from the present\r\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\r\n\r\n\t\t\t\t// If the presentation is looped, distance should measure\r\n\t\t\t\t// 1 between the first and last slides\r\n\t\t\t\tif( config.loop ) {\r\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show the horizontal slide if it's within the view distance\r\n\t\t\t\tif( distanceX < viewDistance ) {\r\n\t\t\t\t\tslideContent.load( horizontalSlide );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tslideContent.unload( horizontalSlide );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( verticalSlidesLength ) {\r\n\r\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\r\n\r\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\r\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\r\n\r\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\r\n\r\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\r\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\r\n\t\t\tif( hasVerticalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\r\n\t\t\t}\r\n\r\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\r\n\t\t\tif( hasHorizontalSlides() ) {\r\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Determine what available routes there are for navigation.\r\n\t *\r\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\r\n\t */\r\n\tfunction availableRoutes({ includeFragments = false } = {}) {\r\n\r\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\r\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\r\n\r\n\t\tlet routes = {\r\n\t\t\tleft: indexh > 0,\r\n\t\t\tright: indexh < horizontalSlides.length - 1,\r\n\t\t\tup: indexv > 0,\r\n\t\t\tdown: indexv < verticalSlides.length - 1\r\n\t\t};\r\n\r\n\t\t// Looped presentations can always be navigated as long as\r\n\t\t// there are slides available\r\n\t\tif( config.loop ) {\r\n\t\t\tif( horizontalSlides.length > 1 ) {\r\n\t\t\t\troutes.left = true;\r\n\t\t\t\troutes.right = true;\r\n\t\t\t}\r\n\r\n\t\t\tif( verticalSlides.length > 1 ) {\r\n\t\t\t\troutes.up = true;\r\n\t\t\t\troutes.down = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\r\n\t\t\troutes.right = routes.right || routes.down;\r\n\t\t\troutes.left = routes.left || routes.up;\r\n\t\t}\r\n\r\n\t\t// If includeFragments is set, a route will be considered\r\n\t\t// available if either a slid OR fragment is available in\r\n\t\t// the given direction\r\n\t\tif( includeFragments === true ) {\r\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\r\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\r\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\r\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\r\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\r\n\t\t}\r\n\r\n\t\t// Reverse horizontal controls for rtl\r\n\t\tif( config.rtl ) {\r\n\t\t\tlet left = routes.left;\r\n\t\t\troutes.left = routes.right;\r\n\t\t\troutes.right = left;\r\n\t\t}\r\n\r\n\t\treturn routes;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the number of past slides. This can be used as a global\r\n\t * flattened index for slides.\r\n\t *\r\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\r\n\t *\r\n\t * @return {number} Past slide count\r\n\t */\r\n\tfunction getSlidePastCount( slide = currentSlide ) {\r\n\r\n\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t// The number of past slides\r\n\t\tlet pastCount = 0;\r\n\r\n\t\t// Step through all slides and count the past ones\r\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\r\n\r\n\t\t\tlet horizontalSlide = horizontalSlides[i];\r\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\r\n\r\n\t\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\t\tif( verticalSlides[j] === slide ) {\r\n\t\t\t\t\tbreak mainLoop;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Don't count slides with the \"uncounted\" class\r\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\t\tpastCount++;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Stop as soon as we arrive at the present\r\n\t\t\tif( horizontalSlide === slide ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// Don't count the wrapping section for vertical slides and\r\n\t\t\t// slides marked as uncounted\r\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\r\n\t\t\t\tpastCount++;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn pastCount;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a value ranging from 0-1 that represents\r\n\t * how far into the presentation we have navigated.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getProgress() {\r\n\r\n\t\t// The number of past and total slides\r\n\t\tlet totalCount = getTotalSlides();\r\n\t\tlet pastCount = getSlidePastCount();\r\n\r\n\t\tif( currentSlide ) {\r\n\r\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\r\n\r\n\t\t\t// If there are fragments in the current slide those should be\r\n\t\t\t// accounted for in the progress.\r\n\t\t\tif( allFragments.length > 0 ) {\r\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\r\n\r\n\t\t\t\t// This value represents how big a portion of the slide progress\r\n\t\t\t\t// that is made up by its fragments (0-1)\r\n\t\t\t\tlet fragmentWeight = 0.9;\r\n\r\n\t\t\t\t// Add fragment progress to the past slide count\r\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the h/v location and fragment of the current,\r\n\t * or specified, slide.\r\n\t *\r\n\t * @param {HTMLElement} [slide] If specified, the returned\r\n\t * index will be for this slide rather than the currently\r\n\t * active one\r\n\t *\r\n\t * @return {{h: number, v: number, f: number}}\r\n\t */\r\n\tfunction getIndices( slide ) {\r\n\r\n\t\t// By default, return the current indices\r\n\t\tlet h = indexh,\r\n\t\t\tv = indexv,\r\n\t\t\tf;\r\n\r\n\t\t// If a slide is specified, return the indices of that slide\r\n\t\tif( slide ) {\r\n\t\t\t// In scroll mode the original h/x index is stored on the slide\r\n\t\t\tif( scrollView.isActive() ) {\r\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\r\n\r\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\r\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\r\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\r\n\r\n\t\t\t\t// Select all horizontal slides\r\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\r\n\r\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\r\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\r\n\r\n\t\t\t\t// Assume we're not vertical\r\n\t\t\t\tv = undefined;\r\n\r\n\t\t\t\t// If this is a vertical slide, grab the vertical index\r\n\t\t\t\tif( isVertical ) {\r\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif( !slide && currentSlide ) {\r\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\r\n\t\t\tif( hasFragments ) {\r\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\r\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\r\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { h, v, f };\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves all slides in this presentation.\r\n\t */\r\n\tfunction getSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a list of all horizontal slides in the deck. Each\r\n\t * vertical stack is included as one horizontal slide in the\r\n\t * resulting array.\r\n\t */\r\n\tfunction getHorizontalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical slides that exist within this deck.\r\n\t */\r\n\tfunction getVerticalSlides() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns all vertical stacks (each stack can contain multiple slides).\r\n\t */\r\n\tfunction getVerticalStacks() {\r\n\r\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two horizontal slides.\r\n\t */\r\n\tfunction hasHorizontalSlides() {\r\n\r\n\t\treturn getHorizontalSlides().length > 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if there are at least two vertical slides.\r\n\t */\r\n\tfunction hasVerticalSlides() {\r\n\r\n\t\treturn getVerticalSlides().length > 1;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an array of objects where each object represents the\r\n\t * attributes on its respective slide.\r\n\t */\r\n\tfunction getSlidesAttributes() {\r\n\r\n\t\treturn getSlides().map( slide => {\r\n\r\n\t\t\tlet attributes = {};\r\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\r\n\t\t\t\tlet attribute = slide.attributes[ i ];\r\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\r\n\t\t\t}\r\n\t\t\treturn attributes;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the total number of slides in this presentation.\r\n\t *\r\n\t * @return {number}\r\n\t */\r\n\tfunction getTotalSlides() {\r\n\r\n\t\treturn getSlides().length;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the slide element matching the specified index.\r\n\t *\r\n\t * @return {HTMLElement}\r\n\t */\r\n\tfunction getSlide( x, y ) {\r\n\r\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\r\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\r\n\r\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\r\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\r\n\t\t}\r\n\r\n\t\treturn horizontalSlide;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the background element for the given slide.\r\n\t * All slides, even the ones with no background properties\r\n\t * defined, have a background element so as long as the\r\n\t * index is valid an element will be returned.\r\n\t *\r\n\t * @param {mixed} x Horizontal background index OR a slide\r\n\t * HTML element\r\n\t * @param {number} y Vertical background index\r\n\t * @return {(HTMLElement[]|*)}\r\n\t */\r\n\tfunction getSlideBackground( x, y ) {\r\n\r\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\r\n\t\tif( slide ) {\r\n\t\t\treturn slide.slideBackgroundElement;\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieves the current state of the presentation as\r\n\t * an object. This state can then be restored at any\r\n\t * time.\r\n\t *\r\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\r\n\t */\r\n\tfunction getState() {\r\n\r\n\t\tlet indices = getIndices();\r\n\r\n\t\treturn {\r\n\t\t\tindexh: indices.h,\r\n\t\t\tindexv: indices.v,\r\n\t\t\tindexf: indices.f,\r\n\t\t\tpaused: isPaused(),\r\n\t\t\toverview: overview.isActive()\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores the presentation to the given state.\r\n\t *\r\n\t * @param {object} state As generated by getState()\r\n\t * @see {@link getState} generates the parameter `state`\r\n\t */\r\n\tfunction setState( state ) {\r\n\r\n\t\tif( typeof state === 'object' ) {\r\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\r\n\r\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\r\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\r\n\r\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\r\n\t\t\t\ttogglePause( pausedFlag );\r\n\t\t\t}\r\n\r\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\r\n\t\t\t\toverview.toggle( overviewFlag );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cues a new automated slide if enabled in the config.\r\n\t */\r\n\tfunction cueAutoSlide() {\r\n\r\n\t\tcancelAutoSlide();\r\n\r\n\t\tif( currentSlide && config.autoSlide !== false ) {\r\n\r\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\r\n\r\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\r\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\r\n\r\n\t\t\t// Pick value in the following priority order:\r\n\t\t\t// 1. Current fragment's data-autoslide\r\n\t\t\t// 2. Current slide's data-autoslide\r\n\t\t\t// 3. Parent slide's data-autoslide\r\n\t\t\t// 4. Global autoSlide setting\r\n\t\t\tif( fragmentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( slideAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse if( parentAutoSlide ) {\r\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tautoSlide = config.autoSlide;\r\n\r\n\t\t\t\t// If there are media elements with data-autoplay,\r\n\t\t\t\t// automatically set the autoSlide duration to the\r\n\t\t\t\t// length of that media. Not applicable if the slide\r\n\t\t\t\t// is divided up into fragments.\r\n\t\t\t\t// playbackRate is accounted for in the duration.\r\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\r\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\r\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\r\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\r\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Cue the next auto-slide if:\r\n\t\t\t// - There is an autoSlide value\r\n\t\t\t// - Auto-sliding isn't paused by the user\r\n\t\t\t// - The presentation isn't paused\r\n\t\t\t// - The overview isn't active\r\n\t\t\t// - The presentation isn't over\r\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\r\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\r\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\r\n\t\t\t\t\t\tconfig.autoSlideMethod()\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnavigateNext();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcueAutoSlide();\r\n\t\t\t\t}, autoSlide );\r\n\t\t\t\tautoSlideStartTime = Date.now();\r\n\t\t\t}\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels any ongoing request to auto-slide.\r\n\t */\r\n\tfunction cancelAutoSlide() {\r\n\r\n\t\tclearTimeout( autoSlideTimeout );\r\n\t\tautoSlideTimeout = -1;\r\n\r\n\t}\r\n\r\n\tfunction pauseAutoSlide() {\r\n\r\n\t\tif( autoSlide && !autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = true;\r\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\r\n\t\t\tclearTimeout( autoSlideTimeout );\r\n\r\n\t\t\tif( autoSlidePlayer ) {\r\n\t\t\t\tautoSlidePlayer.setPlaying( false );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction resumeAutoSlide() {\r\n\r\n\t\tif( autoSlide && autoSlidePaused ) {\r\n\t\t\tautoSlidePaused = false;\r\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\r\n\t\t\tcueAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateLeft({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\r\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\r\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateRight({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\r\n\t\t// Reverse for RTL\r\n\t\tif( config.rtl ) {\r\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\r\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Normal navigation\r\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\r\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateUp({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize hiding fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\r\n\t\t\tslide( indexh, indexv - 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction navigateDown({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\r\n\t\t\tslide( indexh, indexv + 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Navigates backwards, prioritized in the following order:\r\n\t * 1) Previous fragment\r\n\t * 2) Previous vertical slide\r\n\t * 3) Previous horizontal slide\r\n\t */\r\n\tfunction navigatePrev({skipFragments=false}={}) {\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.prev() === false ) {\r\n\t\t\tif( availableRoutes().up ) {\r\n\t\t\t\tnavigateUp({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\r\n\t\t\t\tlet previousSlide;\r\n\r\n\t\t\t\tif( config.rtl ) {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When going backwards and arriving on a stack we start\r\n\t\t\t\t// at the bottom of the stack\r\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\r\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\r\n\t\t\t\t\tlet h = indexh - 1;\r\n\t\t\t\t\tslide( h, v );\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The reverse of #navigatePrev().\r\n\t */\r\n\tfunction navigateNext({skipFragments=false}={}) {\r\n\r\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\r\n\t\tnavigationHistory.hasNavigatedVertically = true;\r\n\r\n\t\t// Prioritize revealing fragments\r\n\t\tif( skipFragments || fragments.next() === false ) {\r\n\r\n\t\t\tlet routes = availableRoutes();\r\n\r\n\t\t\t// When looping is enabled `routes.down` is always available\r\n\t\t\t// so we need a separate check for when we've reached the\r\n\t\t\t// end of a stack and should move horizontally\r\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\r\n\t\t\t\troutes.down = false;\r\n\t\t\t}\r\n\r\n\t\t\tif( routes.down ) {\r\n\t\t\t\tnavigateDown({skipFragments});\r\n\t\t\t}\r\n\t\t\telse if( config.rtl ) {\r\n\t\t\t\tnavigateLeft({skipFragments});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnavigateRight({skipFragments});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ----------------------------- EVENTS -------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t/**\r\n\t * Called by all event handlers that are based on user\r\n\t * input.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onUserInput( event ) {\r\n\r\n\t\tif( config.autoSlideStoppable ) {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t* Listener for post message events posted to this window.\r\n\t*/\r\n\tfunction onPostMessage( event ) {\r\n\r\n\t\tlet data = event.data;\r\n\r\n\t\t// Make sure we're dealing with JSON\r\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\r\n\t\t\tdata = JSON.parse( data );\r\n\r\n\t\t\t// Check if the requested method can be found\r\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\r\n\r\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\r\n\r\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\r\n\r\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\r\n\t\t\t\t\t// our method invocation for getter functions\r\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Event listener for transition end on the current slide.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onTransitionEnd( event ) {\r\n\r\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\r\n\t\t\ttransition = 'idle';\r\n\t\t\tdispatchEvent({\r\n\t\t\t\ttype: 'slidetransitionend',\r\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A global listener for all click events inside of the\r\n\t * .slides container.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onSlidesClicked( event ) {\r\n\r\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\r\n\r\n\t\t// If a hash link is clicked, we find the target slide\r\n\t\t// and navigate to it. We previously relied on 'hashchange'\r\n\t\t// for links like these but that prevented media with\r\n\t\t// audio tracks from playing in mobile browsers since it\r\n\t\t// wasn't considered a direct interaction with the document.\r\n\t\tif( anchor ) {\r\n\t\t\tconst hash = anchor.getAttribute( 'href' );\r\n\t\t\tconst indices = location.getIndicesFromHash( hash );\r\n\r\n\t\t\tif( indices ) {\r\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the window level 'resize' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onWindowResize( event ) {\r\n\r\n\t\tlayout();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handle for the window level 'visibilitychange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onPageVisibilityChange( event ) {\r\n\r\n\t\t// If, after clicking a link or similar and we're coming back,\r\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\r\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\r\n\t\t\t// Not all elements support .blur() - SVGs among them.\r\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\r\n\t\t\t\tdocument.activeElement.blur();\r\n\t\t\t}\r\n\t\t\tdocument.body.focus();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for the document level 'fullscreenchange' event.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onFullscreenChange( event ) {\r\n\r\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\r\n\t\tif( element === dom.wrapper ) {\r\n\t\t\tevent.stopImmediatePropagation();\r\n\r\n\t\t\t// Timeout to avoid layout shift in Safari\r\n\t\t\tsetTimeout( () => {\r\n\t\t\t\tReveal.layout();\r\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\r\n\t\t\t}, 1 );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles clicks on links that are set to preview in the\r\n\t * iframe overlay.\r\n\t *\r\n\t * @param {object} event\r\n\t */\r\n\tfunction onPreviewLinkClicked( event ) {\r\n\r\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\r\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\r\n\t\t\tif( url ) {\r\n\t\t\t\tshowPreview( url );\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on the auto-sliding controls element.\r\n\t *\r\n\t * @param {object} [event]\r\n\t */\r\n\tfunction onAutoSlidePlayerClick( event ) {\r\n\r\n\t\t// Replay\r\n\t\tif( isLastSlide() && config.loop === false ) {\r\n\t\t\tslide( 0, 0 );\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Resume\r\n\t\telse if( autoSlidePaused ) {\r\n\t\t\tresumeAutoSlide();\r\n\t\t}\r\n\t\t// Pause\r\n\t\telse {\r\n\t\t\tpauseAutoSlide();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// --------------------------------------------------------------------//\r\n\t// ------------------------------- API --------------------------------//\r\n\t// --------------------------------------------------------------------//\r\n\r\n\t// The public reveal.js API\r\n\tconst API = {\r\n\t\tVERSION,\r\n\r\n\t\tinitialize,\r\n\t\tconfigure,\r\n\t\tdestroy,\r\n\r\n\t\tsync,\r\n\t\tsyncSlide,\r\n\t\tsyncFragments: fragments.sync.bind( fragments ),\r\n\r\n\t\t// Navigation methods\r\n\t\tslide,\r\n\t\tleft: navigateLeft,\r\n\t\tright: navigateRight,\r\n\t\tup: navigateUp,\r\n\t\tdown: navigateDown,\r\n\t\tprev: navigatePrev,\r\n\t\tnext: navigateNext,\r\n\r\n\t\t// Navigation aliases\r\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\r\n\r\n\t\t// Fragment methods\r\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\r\n\t\tprevFragment: fragments.prev.bind( fragments ),\r\n\t\tnextFragment: fragments.next.bind( fragments ),\r\n\r\n\t\t// Event binding\r\n\t\ton,\r\n\t\toff,\r\n\r\n\t\t// Legacy event binding methods left in for backwards compatibility\r\n\t\taddEventListener: on,\r\n\t\tremoveEventListener: off,\r\n\r\n\t\t// Forces an update in slide layout\r\n\t\tlayout,\r\n\r\n\t\t// Randomizes the order of slides\r\n\t\tshuffle,\r\n\r\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\r\n\t\tavailableRoutes,\r\n\r\n\t\t// Returns an object with the available fragments as booleans (prev/next)\r\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\r\n\r\n\t\t// Toggles a help overlay with keyboard shortcuts\r\n\t\ttoggleHelp,\r\n\r\n\t\t// Toggles the overview mode on/off\r\n\t\ttoggleOverview: overview.toggle.bind( overview ),\r\n\r\n\t\t// Toggles the scroll view on/off\r\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\r\n\r\n\t\t// Toggles the \"black screen\" mode on/off\r\n\t\ttogglePause,\r\n\r\n\t\t// Toggles the auto slide mode on/off\r\n\t\ttoggleAutoSlide,\r\n\r\n\t\t// Toggles visibility of the jump-to-slide UI\r\n\t\ttoggleJumpToSlide,\r\n\r\n\t\t// Slide navigation checks\r\n\t\tisFirstSlide,\r\n\t\tisLastSlide,\r\n\t\tisLastVerticalSlide,\r\n\t\tisVerticalSlide,\r\n\t\tisVerticalStack,\r\n\r\n\t\t// State checks\r\n\t\tisPaused,\r\n\t\tisAutoSliding,\r\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\r\n\t\tisOverview: overview.isActive.bind( overview ),\r\n\t\tisFocused: focus.isFocused.bind( focus ),\r\n\r\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\r\n\t\tisPrintView: printView.isActive.bind( printView ),\r\n\r\n\t\t// Checks if reveal.js has been loaded and is ready for use\r\n\t\tisReady: () => ready,\r\n\r\n\t\t// Slide preloading\r\n\t\tloadSlide: slideContent.load.bind( slideContent ),\r\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\r\n\r\n\t\t// Media playback\r\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\r\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\r\n\r\n\t\t// Preview management\r\n\t\tshowPreview,\r\n\t\thidePreview: closeOverlay,\r\n\r\n\t\t// Adds or removes all internal event listeners\r\n\t\taddEventListeners,\r\n\t\tremoveEventListeners,\r\n\t\tdispatchEvent,\r\n\r\n\t\t// Facility for persisting and restoring the presentation state\r\n\t\tgetState,\r\n\t\tsetState,\r\n\r\n\t\t// Presentation progress on range of 0-1\r\n\t\tgetProgress,\r\n\r\n\t\t// Returns the indices of the current, or specified, slide\r\n\t\tgetIndices,\r\n\r\n\t\t// Returns an Array of key:value maps of the attributes of each\r\n\t\t// slide in the deck\r\n\t\tgetSlidesAttributes,\r\n\r\n\t\t// Returns the number of slides that we have passed\r\n\t\tgetSlidePastCount,\r\n\r\n\t\t// Returns the total number of slides\r\n\t\tgetTotalSlides,\r\n\r\n\t\t// Returns the slide element at the specified index\r\n\t\tgetSlide,\r\n\r\n\t\t// Returns the previous slide element, may be null\r\n\t\tgetPreviousSlide: () => previousSlide,\r\n\r\n\t\t// Returns the current slide element\r\n\t\tgetCurrentSlide: () => currentSlide,\r\n\r\n\t\t// Returns the slide background element at the specified index\r\n\t\tgetSlideBackground,\r\n\r\n\t\t// Returns the speaker notes string for a slide, or null\r\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\r\n\r\n\t\t// Returns an Array of all slides\r\n\t\tgetSlides,\r\n\r\n\t\t// Returns an array with all horizontal/vertical slides in the deck\r\n\t\tgetHorizontalSlides,\r\n\t\tgetVerticalSlides,\r\n\r\n\t\t// Checks if the presentation contains two or more horizontal\r\n\t\t// and vertical slides\r\n\t\thasHorizontalSlides,\r\n\t\thasVerticalSlides,\r\n\r\n\t\t// Checks if the deck has navigated on either axis at least once\r\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\r\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\r\n\r\n\t\tshouldAutoAnimateBetween,\r\n\r\n\t\t// Adds/removes a custom key binding\r\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\r\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\r\n\r\n\t\t// Programmatically triggers a keyboard event\r\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\r\n\r\n\t\t// Registers a new shortcut to include in the help overlay\r\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\r\n\r\n\t\tgetComputedSlideSize,\r\n\t\tsetCurrentScrollPage,\r\n\r\n\t\t// Returns the current scale of the presentation content\r\n\t\tgetScale: () => scale,\r\n\r\n\t\t// Returns the current configuration object\r\n\t\tgetConfig: () => config,\r\n\r\n\t\t// Helper method, retrieves query string as a key:value map\r\n\t\tgetQueryHash: Util.getQueryHash,\r\n\r\n\t\t// Returns the path to the current slide as represented in the URL\r\n\t\tgetSlidePath: location.getHash.bind( location ),\r\n\r\n\t\t// Returns reveal.js DOM elements\r\n\t\tgetRevealElement: () => revealElement,\r\n\t\tgetSlidesElement: () => dom.slides,\r\n\t\tgetViewportElement: () => dom.viewport,\r\n\t\tgetBackgroundsElement: () => backgrounds.element,\r\n\r\n\t\t// API for registering and retrieving plugins\r\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\r\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\r\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\r\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\r\n\r\n\t};\r\n\r\n\t// Our internal API which controllers have access to\r\n\tUtil.extend( Reveal, {\r\n\t\t...API,\r\n\r\n\t\t// Methods for announcing content to screen readers\r\n\t\tannounceStatus,\r\n\t\tgetStatusText,\r\n\r\n\t\t// Controllers\r\n\t\tfocus,\r\n\t\tscroll: scrollView,\r\n\t\tprogress,\r\n\t\tcontrols,\r\n\t\tlocation,\r\n\t\toverview,\r\n\t\tfragments,\r\n\t\tbackgrounds,\r\n\t\tslideContent,\r\n\t\tslideNumber,\r\n\r\n\t\tonUserInput,\r\n\t\tcloseOverlay,\r\n\t\tupdateSlidesVisibility,\r\n\t\tlayoutSlideContents,\r\n\t\ttransformSlides,\r\n\t\tcueAutoSlide,\r\n\t\tcancelAutoSlide\r\n\t} );\r\n\r\n\treturn API;\r\n\r\n};\r\n","import Deck, { VERSION } from './reveal.js'\r\n\r\n/**\r\n * Expose the Reveal class to the window. To create a\r\n * new instance:\r\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\r\n *   controls: false\r\n * } );\r\n * deck.initialize().then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\nlet Reveal = Deck;\r\n\r\n\r\n/**\r\n * The below is a thin shell that mimics the pre 4.0\r\n * reveal.js API and ensures backwards compatibility.\r\n * This API only allows for one Reveal instance per\r\n * page, whereas the new API above lets you run many\r\n * presentations on the same page.\r\n *\r\n * Reveal.initialize( { controls: false } ).then(() => {\r\n *   // reveal.js is ready\r\n * });\r\n */\r\n\r\nlet enqueuedAPICalls = [];\r\n\r\nReveal.initialize = options => {\r\n\r\n\t// Create our singleton reveal.js instance\r\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\r\n\r\n\t// Invoke any enqueued API calls\r\n\tenqueuedAPICalls.map( method => method( Reveal ) );\r\n\r\n\treturn Reveal.initialize();\r\n\r\n}\r\n\r\n/**\r\n * The pre 4.0 API let you add event listener before\r\n * initializing. We maintain the same behavior by\r\n * queuing up premature API calls and invoking all\r\n * of them when Reveal.initialize is called.\r\n */\r\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\r\n\tReveal[method] = ( ...args ) => {\r\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\r\n\t}\r\n} );\r\n\r\nReveal.isReady = () => false;\r\n\r\nReveal.VERSION = VERSION;\r\n\r\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","cancelAnimationFrame","requestAnimationFrame","s","filter","dirty","active","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","n","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","arguments","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","getMimeTypeFromFile","filename","innerHTML","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","contentContainer","shouldAutoAnimateBetween","page","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","documentElement","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","includes","togglePause","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","viewport","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","isVertical","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}